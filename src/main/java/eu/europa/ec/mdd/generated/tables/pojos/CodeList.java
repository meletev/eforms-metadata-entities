/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.pojos;


import eu.europa.ec.mdd.generated.enums.CodeListType;
import eu.europa.ec.mdd.generated.tables.interfaces.ICodeList;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CodeList implements ICodeList {

  private static final long serialVersionUID = 1L;

  private String        id;
  private String        description;
  private Boolean       official;
  private CodeListType  type;
  private String        parentId;
  private String        sourceCanonicalUri;
  private String        sourceVersion;
  private String        sourceShortName;
  private String        sourceLongName;
  private String        sourceLongNameListId;
  private LocalDateTime created;
  private LocalDateTime imported;

  public CodeList() {}

  public CodeList(ICodeList value) {
    this.id = value.getId();
    this.description = value.getDescription();
    this.official = value.getOfficial();
    this.type = value.getType();
    this.parentId = value.getParentId();
    this.sourceCanonicalUri = value.getSourceCanonicalUri();
    this.sourceVersion = value.getSourceVersion();
    this.sourceShortName = value.getSourceShortName();
    this.sourceLongName = value.getSourceLongName();
    this.sourceLongNameListId = value.getSourceLongNameListId();
    this.created = value.getCreated();
    this.imported = value.getImported();
  }

  public CodeList(
    String        id,
    String        description,
    Boolean       official,
    CodeListType  type,
    String        parentId,
    String        sourceCanonicalUri,
    String        sourceVersion,
    String        sourceShortName,
    String        sourceLongName,
    String        sourceLongNameListId,
    LocalDateTime created,
    LocalDateTime imported
  ) {
    this.id = id;
    this.description = description;
    this.official = official;
    this.type = type;
    this.parentId = parentId;
    this.sourceCanonicalUri = sourceCanonicalUri;
    this.sourceVersion = sourceVersion;
    this.sourceShortName = sourceShortName;
    this.sourceLongName = sourceLongName;
    this.sourceLongNameListId = sourceLongNameListId;
    this.created = created;
    this.imported = imported;
  }

  /**
   * Getter for <code>code_list.id</code>.
   */
  @Override
  public String getId() {
    return this.id;
  }

  /**
   * Setter for <code>code_list.id</code>.
   */
  @Override
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Getter for <code>code_list.description</code>.
   */
  @Override
  public String getDescription() {
    return this.description;
  }

  /**
   * Setter for <code>code_list.description</code>.
   */
  @Override
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Getter for <code>code_list.official</code>.
   */
  @Override
  public Boolean getOfficial() {
    return this.official;
  }

  /**
   * Setter for <code>code_list.official</code>.
   */
  @Override
  public void setOfficial(Boolean official) {
    this.official = official;
  }

  /**
   * Getter for <code>code_list.type</code>.
   */
  @Override
  public CodeListType getType() {
    return this.type;
  }

  /**
   * Setter for <code>code_list.type</code>.
   */
  @Override
  public void setType(CodeListType type) {
    this.type = type;
  }

  /**
   * Getter for <code>code_list.parent_id</code>.
   */
  @Override
  public String getParentId() {
    return this.parentId;
  }

  /**
   * Setter for <code>code_list.parent_id</code>.
   */
  @Override
  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  /**
   * Getter for <code>code_list.source_canonical_uri</code>.
   */
  @Override
  public String getSourceCanonicalUri() {
    return this.sourceCanonicalUri;
  }

  /**
   * Setter for <code>code_list.source_canonical_uri</code>.
   */
  @Override
  public void setSourceCanonicalUri(String sourceCanonicalUri) {
    this.sourceCanonicalUri = sourceCanonicalUri;
  }

  /**
   * Getter for <code>code_list.source_version</code>.
   */
  @Override
  public String getSourceVersion() {
    return this.sourceVersion;
  }

  /**
   * Setter for <code>code_list.source_version</code>.
   */
  @Override
  public void setSourceVersion(String sourceVersion) {
    this.sourceVersion = sourceVersion;
  }

  /**
   * Getter for <code>code_list.source_short_name</code>.
   */
  @Override
  public String getSourceShortName() {
    return this.sourceShortName;
  }

  /**
   * Setter for <code>code_list.source_short_name</code>.
   */
  @Override
  public void setSourceShortName(String sourceShortName) {
    this.sourceShortName = sourceShortName;
  }

  /**
   * Getter for <code>code_list.source_long_name</code>.
   */
  @Override
  public String getSourceLongName() {
    return this.sourceLongName;
  }

  /**
   * Setter for <code>code_list.source_long_name</code>.
   */
  @Override
  public void setSourceLongName(String sourceLongName) {
    this.sourceLongName = sourceLongName;
  }

  /**
   * Getter for <code>code_list.source_long_name_list_id</code>.
   */
  @Override
  public String getSourceLongNameListId() {
    return this.sourceLongNameListId;
  }

  /**
   * Setter for <code>code_list.source_long_name_list_id</code>.
   */
  @Override
  public void setSourceLongNameListId(String sourceLongNameListId) {
    this.sourceLongNameListId = sourceLongNameListId;
  }

  /**
   * Getter for <code>code_list.created</code>.
   */
  @Override
  public LocalDateTime getCreated() {
    return this.created;
  }

  /**
   * Setter for <code>code_list.created</code>.
   */
  @Override
  public void setCreated(LocalDateTime created) {
    this.created = created;
  }

  /**
   * Getter for <code>code_list.imported</code>.
   */
  @Override
  public LocalDateTime getImported() {
    return this.imported;
  }

  /**
   * Setter for <code>code_list.imported</code>.
   */
  @Override
  public void setImported(LocalDateTime imported) {
    this.imported = imported;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CodeList (");

    sb.append(id);
    sb.append(", ").append(description);
    sb.append(", ").append(official);
    sb.append(", ").append(type);
    sb.append(", ").append(parentId);
    sb.append(", ").append(sourceCanonicalUri);
    sb.append(", ").append(sourceVersion);
    sb.append(", ").append(sourceShortName);
    sb.append(", ").append(sourceLongName);
    sb.append(", ").append(sourceLongNameListId);
    sb.append(", ").append(created);
    sb.append(", ").append(imported);

    sb.append(")");
    return sb.toString();
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(ICodeList from) {
    setId(from.getId());
    setDescription(from.getDescription());
    setOfficial(from.getOfficial());
    setType(from.getType());
    setParentId(from.getParentId());
    setSourceCanonicalUri(from.getSourceCanonicalUri());
    setSourceVersion(from.getSourceVersion());
    setSourceShortName(from.getSourceShortName());
    setSourceLongName(from.getSourceLongName());
    setSourceLongNameListId(from.getSourceLongNameListId());
    setCreated(from.getCreated());
    setImported(from.getImported());
  }

  @Override
  public <E extends ICodeList> E into(E into) {
    into.from(this);
    return into;
  }
}
