/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.pojos;


import eu.europa.ec.mdd.generated.tables.interfaces.ICondition;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Condition implements ICondition {

  private static final long serialVersionUID = 1L;

  private Integer id;
  private String  description;
  private String  expressionEfx;

  public Condition() {}

  public Condition(ICondition value) {
    this.id = value.getId();
    this.description = value.getDescription();
    this.expressionEfx = value.getExpressionEfx();
  }

  public Condition(
    Integer id,
    String  description,
    String  expressionEfx
  ) {
    this.id = id;
    this.description = description;
    this.expressionEfx = expressionEfx;
  }

  /**
   * Getter for <code>condition.id</code>.
   */
  @Override
  public Integer getId() {
    return this.id;
  }

  /**
   * Setter for <code>condition.id</code>.
   */
  @Override
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   * Getter for <code>condition.description</code>.
   */
  @Override
  public String getDescription() {
    return this.description;
  }

  /**
   * Setter for <code>condition.description</code>.
   */
  @Override
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Getter for <code>condition.expression_efx</code>.
   */
  @Override
  public String getExpressionEfx() {
    return this.expressionEfx;
  }

  /**
   * Setter for <code>condition.expression_efx</code>.
   */
  @Override
  public void setExpressionEfx(String expressionEfx) {
    this.expressionEfx = expressionEfx;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Condition (");

    sb.append(id);
    sb.append(", ").append(description);
    sb.append(", ").append(expressionEfx);

    sb.append(")");
    return sb.toString();
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(ICondition from) {
    setId(from.getId());
    setDescription(from.getDescription());
    setExpressionEfx(from.getExpressionEfx());
  }

  @Override
  public <E extends ICondition> E into(E into) {
    into.from(this);
    return into;
  }
}
