/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.interfaces;


import java.io.Serializable;


/**
 * Contains XML nodes that contain other nodes or fields. Used to represent 
 * the XML structure except the leaf nodes (  which are the fields).
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface INode extends Serializable {

  /**
   * Setter for <code>node.id</code>.
   */
  public void setId(String value);

  /**
   * Getter for <code>node.id</code>.
   */
  public String getId();

  /**
   * Setter for <code>node.parent_id</code>.
   */
  public void setParentId(String value);

  /**
   * Getter for <code>node.parent_id</code>.
   */
  public String getParentId();

  /**
   * Setter for <code>node.xpath_relative</code>.
   */
  public void setXpathRelative(String value);

  /**
   * Getter for <code>node.xpath_relative</code>.
   */
  public String getXpathRelative();

  /**
   * Setter for <code>node.repeatable</code>.
   */
  public void setRepeatable(Boolean value);

  /**
   * Getter for <code>node.repeatable</code>.
   */
  public Boolean getRepeatable();

  /**
   * Setter for <code>node.identifier_field_id</code>. If the node is repeatable, then the identifier_field_id should point to the field of type "id" which is supposed to hold the identifier of whatever entities this repeatable node contains.
   */
  public void setIdentifierFieldId(String value);

  /**
   * Getter for <code>node.identifier_field_id</code>. If the node is repeatable, then the identifier_field_id should point to the field of type "id" which is supposed to hold the identifier of whatever entities this repeatable node contains.
   */
  public String getIdentifierFieldId();

  /**
   * Setter for <code>node.name</code>. Human readable name
   */
  public void setName(String value);

  /**
   * Getter for <code>node.name</code>. Human readable name
   */
  public String getName();

  /**
   * Setter for <code>node.description</code>.
   */
  public void setDescription(String value);

  /**
   * Getter for <code>node.description</code>.
   */
  public String getDescription();

  /**
   * Setter for <code>node.db_generated</code>.
   */
  public void setDbGenerated(Boolean value);

  /**
   * Getter for <code>node.db_generated</code>.
   */
  public Boolean getDbGenerated();

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  /**
   * Load data from another generated Record/POJO implementing the common interface INode
   */
  public void from(INode from);

  /**
   * Copy data into another generated Record/POJO implementing the common interface INode
   */
  public <E extends INode> E into(E into);
}
