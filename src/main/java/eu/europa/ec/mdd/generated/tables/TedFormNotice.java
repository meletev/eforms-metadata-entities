/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables;


import eu.europa.ec.mdd.generated.DefaultSchema;
import eu.europa.ec.mdd.generated.Indexes;
import eu.europa.ec.mdd.generated.Keys;
import eu.europa.ec.mdd.generated.tables.records.TedFormNoticeRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TedFormNotice extends TableImpl<TedFormNoticeRecord> {

  private static final long serialVersionUID = 1L;

  /**
   * The reference instance of <code>ted_form_notice</code>
   */
  public static final TedFormNotice TED_FORM_NOTICE = new TedFormNotice();

  /**
   * The class holding records for this type
   */
  @Override
  public Class<TedFormNoticeRecord> getRecordType() {
    return TedFormNoticeRecord.class;
  }

  /**
   * The column <code>ted_form_notice.notice_id</code>.
   */
  public final TableField<TedFormNoticeRecord, String> NOTICE_ID = createField(DSL.name("notice_id"), SQLDataType.VARCHAR(255).nullable(false), this, "");

  /**
   * The column <code>ted_form_notice.ted_form_id</code>.
   */
  public final TableField<TedFormNoticeRecord, String> TED_FORM_ID = createField(DSL.name("ted_form_id"), SQLDataType.VARCHAR(10).nullable(false), this, "");

  private TedFormNotice(Name alias, Table<TedFormNoticeRecord> aliased) {
    this(alias, aliased, null);
  }

  private TedFormNotice(Name alias, Table<TedFormNoticeRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  /**
   * Create an aliased <code>ted_form_notice</code> table reference
   */
  public TedFormNotice(String alias) {
    this(DSL.name(alias), TED_FORM_NOTICE);
  }

  /**
   * Create an aliased <code>ted_form_notice</code> table reference
   */
  public TedFormNotice(Name alias) {
    this(alias, TED_FORM_NOTICE);
  }

  /**
   * Create a <code>ted_form_notice</code> table reference
   */
  public TedFormNotice() {
    this(DSL.name("ted_form_notice"), null);
  }

  public <O extends Record> TedFormNotice(Table<O> child, ForeignKey<O, TedFormNoticeRecord> key) {
    super(child, key, TED_FORM_NOTICE);
  }

  @Override
  public Schema getSchema() {
    return DefaultSchema.DEFAULT_SCHEMA;
  }

  @Override
  public List<Index> getIndexes() {
    return Arrays.<Index>asList(Indexes.TED_FORM_NOTICE_TED_FORM_ID);
  }

  @Override
  public UniqueKey<TedFormNoticeRecord> getPrimaryKey() {
    return Keys.KEY_TED_FORM_NOTICE_PRIMARY;
  }

  @Override
  public List<UniqueKey<TedFormNoticeRecord>> getKeys() {
    return Arrays.<UniqueKey<TedFormNoticeRecord>>asList(Keys.KEY_TED_FORM_NOTICE_PRIMARY);
  }

  @Override
  public List<ForeignKey<TedFormNoticeRecord, ?>> getReferences() {
    return Arrays.<ForeignKey<TedFormNoticeRecord, ?>>asList(Keys.TED_FORM_NOTICE_IBFK_1, Keys.TED_FORM_NOTICE_IBFK_2);
  }

  private transient Notice _notice;
  private transient TedForm _tedForm;

  public Notice notice() {
    if (_notice == null)
      _notice = new Notice(this, Keys.TED_FORM_NOTICE_IBFK_1);

    return _notice;
  }

  public TedForm tedForm() {
    if (_tedForm == null)
      _tedForm = new TedForm(this, Keys.TED_FORM_NOTICE_IBFK_2);

    return _tedForm;
  }

  @Override
  public TedFormNotice as(String alias) {
    return new TedFormNotice(DSL.name(alias), this);
  }

  @Override
  public TedFormNotice as(Name alias) {
    return new TedFormNotice(alias, this);
  }

  /**
   * Rename this table
   */
  @Override
  public TedFormNotice rename(String name) {
    return new TedFormNotice(DSL.name(name), null);
  }

  /**
   * Rename this table
   */
  @Override
  public TedFormNotice rename(Name name) {
    return new TedFormNotice(name, null);
  }

  // -------------------------------------------------------------------------
  // Row2 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row2<String, String> fieldsRow() {
    return (Row2) super.fieldsRow();
  }
}
