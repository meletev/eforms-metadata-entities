/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.records;


import eu.europa.ec.mdd.generated.tables.TedFormNotice;
import eu.europa.ec.mdd.generated.tables.interfaces.ITedFormNotice;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TedFormNoticeRecord extends UpdatableRecordImpl<TedFormNoticeRecord> implements Record2<String, String>, ITedFormNotice {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>ted_form_notice.notice_id</code>.
   */
  @Override
  public void setNoticeId(String value) {
    set(0, value);
  }

  /**
   * Getter for <code>ted_form_notice.notice_id</code>.
   */
  @Override
  public String getNoticeId() {
    return (String) get(0);
  }

  /**
   * Setter for <code>ted_form_notice.ted_form_id</code>.
   */
  @Override
  public void setTedFormId(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>ted_form_notice.ted_form_id</code>.
   */
  @Override
  public String getTedFormId() {
    return (String) get(1);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record2<String, String> key() {
    return (Record2) super.key();
  }

  // -------------------------------------------------------------------------
  // Record2 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row2<String, String> fieldsRow() {
    return (Row2) super.fieldsRow();
  }

  @Override
  public Row2<String, String> valuesRow() {
    return (Row2) super.valuesRow();
  }

  @Override
  public Field<String> field1() {
    return TedFormNotice.TED_FORM_NOTICE.NOTICE_ID;
  }

  @Override
  public Field<String> field2() {
    return TedFormNotice.TED_FORM_NOTICE.TED_FORM_ID;
  }

  @Override
  public String component1() {
    return getNoticeId();
  }

  @Override
  public String component2() {
    return getTedFormId();
  }

  @Override
  public String value1() {
    return getNoticeId();
  }

  @Override
  public String value2() {
    return getTedFormId();
  }

  @Override
  public TedFormNoticeRecord value1(String value) {
    setNoticeId(value);
    return this;
  }

  @Override
  public TedFormNoticeRecord value2(String value) {
    setTedFormId(value);
    return this;
  }

  @Override
  public TedFormNoticeRecord values(String value1, String value2) {
    value1(value1);
    value2(value2);
    return this;
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(ITedFormNotice from) {
    setNoticeId(from.getNoticeId());
    setTedFormId(from.getTedFormId());
  }

  @Override
  public <E extends ITedFormNotice> E into(E into) {
    into.from(this);
    return into;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached TedFormNoticeRecord
   */
  public TedFormNoticeRecord() {
    super(TedFormNotice.TED_FORM_NOTICE);
  }

  /**
   * Create a detached, initialised TedFormNoticeRecord
   */
  public TedFormNoticeRecord(String noticeId, String tedFormId) {
    super(TedFormNotice.TED_FORM_NOTICE);

    setNoticeId(noticeId);
    setTedFormId(tedFormId);
  }
}
