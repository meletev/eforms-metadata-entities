/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.pojos;


import eu.europa.ec.mdd.generated.tables.interfaces.ICodeListToCode;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CodeListToCode implements ICodeListToCode {

  private static final long serialVersionUID = 1L;

  private String  codeListId;
  private String  codeValue;
  private String  codeCodeListId;
  private Boolean forJooqBatch;

  public CodeListToCode() {}

  public CodeListToCode(ICodeListToCode value) {
    this.codeListId = value.getCodeListId();
    this.codeValue = value.getCodeValue();
    this.codeCodeListId = value.getCodeCodeListId();
    this.forJooqBatch = value.getForJooqBatch();
  }

  public CodeListToCode(
    String  codeListId,
    String  codeValue,
    String  codeCodeListId,
    Boolean forJooqBatch
  ) {
    this.codeListId = codeListId;
    this.codeValue = codeValue;
    this.codeCodeListId = codeCodeListId;
    this.forJooqBatch = forJooqBatch;
  }

  /**
   * Getter for <code>code_list_to_code.code_list_id</code>.
   */
  @Override
  public String getCodeListId() {
    return this.codeListId;
  }

  /**
   * Setter for <code>code_list_to_code.code_list_id</code>.
   */
  @Override
  public void setCodeListId(String codeListId) {
    this.codeListId = codeListId;
  }

  /**
   * Getter for <code>code_list_to_code.code_value</code>.
   */
  @Override
  public String getCodeValue() {
    return this.codeValue;
  }

  /**
   * Setter for <code>code_list_to_code.code_value</code>.
   */
  @Override
  public void setCodeValue(String codeValue) {
    this.codeValue = codeValue;
  }

  /**
   * Getter for <code>code_list_to_code.code_code_list_id</code>.
   */
  @Override
  public String getCodeCodeListId() {
    return this.codeCodeListId;
  }

  /**
   * Setter for <code>code_list_to_code.code_code_list_id</code>.
   */
  @Override
  public void setCodeCodeListId(String codeCodeListId) {
    this.codeCodeListId = codeCodeListId;
  }

  /**
   * Getter for <code>code_list_to_code.for_jooq_batch</code>.
   */
  @Override
  public Boolean getForJooqBatch() {
    return this.forJooqBatch;
  }

  /**
   * Setter for <code>code_list_to_code.for_jooq_batch</code>.
   */
  @Override
  public void setForJooqBatch(Boolean forJooqBatch) {
    this.forJooqBatch = forJooqBatch;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CodeListToCode (");

    sb.append(codeListId);
    sb.append(", ").append(codeValue);
    sb.append(", ").append(codeCodeListId);
    sb.append(", ").append(forJooqBatch);

    sb.append(")");
    return sb.toString();
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(ICodeListToCode from) {
    setCodeListId(from.getCodeListId());
    setCodeValue(from.getCodeValue());
    setCodeCodeListId(from.getCodeCodeListId());
    setForJooqBatch(from.getForJooqBatch());
  }

  @Override
  public <E extends ICodeListToCode> E into(E into) {
    into.from(this);
    return into;
  }
}
