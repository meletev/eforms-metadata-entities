/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.tables.NoticeToView;
import eu.europa.ec.mdd.generated.tables.records.NoticeToViewRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class NoticeToViewDao extends DAOImpl<NoticeToViewRecord, eu.europa.ec.mdd.generated.tables.pojos.NoticeToView, Record2<String, String>> {

  /**
   * Create a new NoticeToViewDao without any configuration
   */
  public NoticeToViewDao() {
    super(NoticeToView.NOTICE_TO_VIEW, eu.europa.ec.mdd.generated.tables.pojos.NoticeToView.class);
  }

  /**
   * Create a new NoticeToViewDao with an attached configuration
   */
  @Autowired
  public NoticeToViewDao(Configuration configuration) {
    super(NoticeToView.NOTICE_TO_VIEW, eu.europa.ec.mdd.generated.tables.pojos.NoticeToView.class, configuration);
  }

  @Override
  public Record2<String, String> getId(eu.europa.ec.mdd.generated.tables.pojos.NoticeToView object) {
    return compositeKeyRecord(object.getNoticeId(), object.getViewId());
  }

  /**
   * Fetch records that have <code>notice_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.NoticeToView> fetchRangeOfNoticeId(String lowerInclusive, String upperInclusive) {
    return fetchRange(NoticeToView.NOTICE_TO_VIEW.NOTICE_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>notice_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.NoticeToView> fetchByNoticeId(String... values) {
    return fetch(NoticeToView.NOTICE_TO_VIEW.NOTICE_ID, values);
  }

  /**
   * Fetch records that have <code>view_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.NoticeToView> fetchRangeOfViewId(String lowerInclusive, String upperInclusive) {
    return fetchRange(NoticeToView.NOTICE_TO_VIEW.VIEW_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>view_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.NoticeToView> fetchByViewId(String... values) {
    return fetch(NoticeToView.NOTICE_TO_VIEW.VIEW_ID, values);
  }
}
