/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.tables.Interval;
import eu.europa.ec.mdd.generated.tables.records.IntervalRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class IntervalDao extends DAOImpl<IntervalRecord, eu.europa.ec.mdd.generated.tables.pojos.Interval, String> {

  /**
   * Create a new IntervalDao without any configuration
   */
  public IntervalDao() {
    super(Interval.INTERVAL, eu.europa.ec.mdd.generated.tables.pojos.Interval.class);
  }

  /**
   * Create a new IntervalDao with an attached configuration
   */
  @Autowired
  public IntervalDao(Configuration configuration) {
    super(Interval.INTERVAL, eu.europa.ec.mdd.generated.tables.pojos.Interval.class, configuration);
  }

  @Override
  public String getId(eu.europa.ec.mdd.generated.tables.pojos.Interval object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Interval> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
    return fetchRange(Interval.INTERVAL.ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Interval> fetchById(String... values) {
    return fetch(Interval.INTERVAL.ID, values);
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.Interval fetchOneById(String value) {
    return fetchOne(Interval.INTERVAL.ID, value);
  }

  /**
   * Fetch records that have <code>lower_value BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Interval> fetchRangeOfLowerValue(String lowerInclusive, String upperInclusive) {
    return fetchRange(Interval.INTERVAL.LOWER_VALUE, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>lower_value IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Interval> fetchByLowerValue(String... values) {
    return fetch(Interval.INTERVAL.LOWER_VALUE, values);
  }

  /**
   * Fetch records that have <code>higher_value BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Interval> fetchRangeOfHigherValue(String lowerInclusive, String upperInclusive) {
    return fetchRange(Interval.INTERVAL.HIGHER_VALUE, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>higher_value IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Interval> fetchByHigherValue(String... values) {
    return fetch(Interval.INTERVAL.HIGHER_VALUE, values);
  }
}
