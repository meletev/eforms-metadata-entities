/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables;


import eu.europa.ec.mdd.generated.DefaultSchema;
import eu.europa.ec.mdd.generated.Indexes;
import eu.europa.ec.mdd.generated.Keys;
import eu.europa.ec.mdd.generated.tables.records.TedItemFieldRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TedItemField extends TableImpl<TedItemFieldRecord> {

  private static final long serialVersionUID = 1L;

  /**
   * The reference instance of <code>ted_item_field</code>
   */
  public static final TedItemField TED_ITEM_FIELD = new TedItemField();

  /**
   * The class holding records for this type
   */
  @Override
  public Class<TedItemFieldRecord> getRecordType() {
    return TedItemFieldRecord.class;
  }

  /**
   * The column <code>ted_item_field.ted_item_id</code>.
   */
  public final TableField<TedItemFieldRecord, Integer> TED_ITEM_ID = createField(DSL.name("ted_item_id"), SQLDataType.INTEGER.nullable(false), this, "");

  /**
   * The column <code>ted_item_field.field_id</code>.
   */
  public final TableField<TedItemFieldRecord, String> FIELD_ID = createField(DSL.name("field_id"), SQLDataType.VARCHAR(255).nullable(false), this, "");

  private TedItemField(Name alias, Table<TedItemFieldRecord> aliased) {
    this(alias, aliased, null);
  }

  private TedItemField(Name alias, Table<TedItemFieldRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  /**
   * Create an aliased <code>ted_item_field</code> table reference
   */
  public TedItemField(String alias) {
    this(DSL.name(alias), TED_ITEM_FIELD);
  }

  /**
   * Create an aliased <code>ted_item_field</code> table reference
   */
  public TedItemField(Name alias) {
    this(alias, TED_ITEM_FIELD);
  }

  /**
   * Create a <code>ted_item_field</code> table reference
   */
  public TedItemField() {
    this(DSL.name("ted_item_field"), null);
  }

  public <O extends Record> TedItemField(Table<O> child, ForeignKey<O, TedItemFieldRecord> key) {
    super(child, key, TED_ITEM_FIELD);
  }

  @Override
  public Schema getSchema() {
    return DefaultSchema.DEFAULT_SCHEMA;
  }

  @Override
  public List<Index> getIndexes() {
    return Arrays.<Index>asList(Indexes.TED_ITEM_FIELD_FIELD_ID);
  }

  @Override
  public UniqueKey<TedItemFieldRecord> getPrimaryKey() {
    return Keys.KEY_TED_ITEM_FIELD_PRIMARY;
  }

  @Override
  public List<UniqueKey<TedItemFieldRecord>> getKeys() {
    return Arrays.<UniqueKey<TedItemFieldRecord>>asList(Keys.KEY_TED_ITEM_FIELD_PRIMARY);
  }

  @Override
  public List<ForeignKey<TedItemFieldRecord, ?>> getReferences() {
    return Arrays.<ForeignKey<TedItemFieldRecord, ?>>asList(Keys.TED_ITEM_FIELD_IBFK_2, Keys.TED_ITEM_FIELD_IBFK_1);
  }

  private transient TedItem _tedItem;
  private transient eu.europa.ec.mdd.generated.tables.Field _field;

  public TedItem tedItem() {
    if (_tedItem == null)
      _tedItem = new TedItem(this, Keys.TED_ITEM_FIELD_IBFK_2);

    return _tedItem;
  }

  public eu.europa.ec.mdd.generated.tables.Field field() {
    if (_field == null)
      _field = new eu.europa.ec.mdd.generated.tables.Field(this, Keys.TED_ITEM_FIELD_IBFK_1);

    return _field;
  }

  @Override
  public TedItemField as(String alias) {
    return new TedItemField(DSL.name(alias), this);
  }

  @Override
  public TedItemField as(Name alias) {
    return new TedItemField(alias, this);
  }

  /**
   * Rename this table
   */
  @Override
  public TedItemField rename(String name) {
    return new TedItemField(DSL.name(name), null);
  }

  /**
   * Rename this table
   */
  @Override
  public TedItemField rename(Name name) {
    return new TedItemField(name, null);
  }

  // -------------------------------------------------------------------------
  // Row2 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row2<Integer, String> fieldsRow() {
    return (Row2) super.fieldsRow();
  }
}
