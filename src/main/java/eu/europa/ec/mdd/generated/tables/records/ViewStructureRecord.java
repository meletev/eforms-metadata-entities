/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.records;


import eu.europa.ec.mdd.generated.tables.ViewStructure;
import eu.europa.ec.mdd.generated.tables.interfaces.IViewStructure;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewStructureRecord extends UpdatableRecordImpl<ViewStructureRecord> implements Record8<String, String, Integer, String, String, LocalDateTime, LocalDateTime, LocalDateTime>, IViewStructure {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>view_structure.id</code>.
   */
  @Override
  public void setId(String value) {
    set(0, value);
  }

  /**
   * Getter for <code>view_structure.id</code>.
   */
  @Override
  public String getId() {
    return (String) get(0);
  }

  /**
   * Setter for <code>view_structure.parent_id</code>.
   */
  @Override
  public void setParentId(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>view_structure.parent_id</code>.
   */
  @Override
  public String getParentId() {
    return (String) get(1);
  }

  /**
   * Setter for <code>view_structure.sort_order</code>.
   */
  @Override
  public void setSortOrder(Integer value) {
    set(2, value);
  }

  /**
   * Getter for <code>view_structure.sort_order</code>.
   */
  @Override
  public Integer getSortOrder() {
    return (Integer) get(2);
  }

  /**
   * Setter for <code>view_structure.description</code>. For humans
   */
  @Override
  public void setDescription(String value) {
    set(3, value);
  }

  /**
   * Getter for <code>view_structure.description</code>. For humans
   */
  @Override
  public String getDescription() {
    return (String) get(3);
  }

  /**
   * Setter for <code>view_structure.db_modified_by</code>.
   */
  @Override
  public void setDbModifiedBy(String value) {
    set(4, value);
  }

  /**
   * Getter for <code>view_structure.db_modified_by</code>.
   */
  @Override
  public String getDbModifiedBy() {
    return (String) get(4);
  }

  /**
   * Setter for <code>view_structure.db_modified</code>.
   */
  @Override
  public void setDbModified(LocalDateTime value) {
    set(5, value);
  }

  /**
   * Getter for <code>view_structure.db_modified</code>.
   */
  @Override
  public LocalDateTime getDbModified() {
    return (LocalDateTime) get(5);
  }

  /**
   * Setter for <code>view_structure.db_created</code>.
   */
  @Override
  public void setDbCreated(LocalDateTime value) {
    set(6, value);
  }

  /**
   * Getter for <code>view_structure.db_created</code>.
   */
  @Override
  public LocalDateTime getDbCreated() {
    return (LocalDateTime) get(6);
  }

  /**
   * Setter for <code>view_structure.db_imported</code>.
   */
  @Override
  public void setDbImported(LocalDateTime value) {
    set(7, value);
  }

  /**
   * Getter for <code>view_structure.db_imported</code>.
   */
  @Override
  public LocalDateTime getDbImported() {
    return (LocalDateTime) get(7);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<String> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record8 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row8<String, String, Integer, String, String, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
    return (Row8) super.fieldsRow();
  }

  @Override
  public Row8<String, String, Integer, String, String, LocalDateTime, LocalDateTime, LocalDateTime> valuesRow() {
    return (Row8) super.valuesRow();
  }

  @Override
  public Field<String> field1() {
    return ViewStructure.VIEW_STRUCTURE.ID;
  }

  @Override
  public Field<String> field2() {
    return ViewStructure.VIEW_STRUCTURE.PARENT_ID;
  }

  @Override
  public Field<Integer> field3() {
    return ViewStructure.VIEW_STRUCTURE.SORT_ORDER;
  }

  @Override
  public Field<String> field4() {
    return ViewStructure.VIEW_STRUCTURE.DESCRIPTION;
  }

  @Override
  public Field<String> field5() {
    return ViewStructure.VIEW_STRUCTURE.DB_MODIFIED_BY;
  }

  @Override
  public Field<LocalDateTime> field6() {
    return ViewStructure.VIEW_STRUCTURE.DB_MODIFIED;
  }

  @Override
  public Field<LocalDateTime> field7() {
    return ViewStructure.VIEW_STRUCTURE.DB_CREATED;
  }

  @Override
  public Field<LocalDateTime> field8() {
    return ViewStructure.VIEW_STRUCTURE.DB_IMPORTED;
  }

  @Override
  public String component1() {
    return getId();
  }

  @Override
  public String component2() {
    return getParentId();
  }

  @Override
  public Integer component3() {
    return getSortOrder();
  }

  @Override
  public String component4() {
    return getDescription();
  }

  @Override
  public String component5() {
    return getDbModifiedBy();
  }

  @Override
  public LocalDateTime component6() {
    return getDbModified();
  }

  @Override
  public LocalDateTime component7() {
    return getDbCreated();
  }

  @Override
  public LocalDateTime component8() {
    return getDbImported();
  }

  @Override
  public String value1() {
    return getId();
  }

  @Override
  public String value2() {
    return getParentId();
  }

  @Override
  public Integer value3() {
    return getSortOrder();
  }

  @Override
  public String value4() {
    return getDescription();
  }

  @Override
  public String value5() {
    return getDbModifiedBy();
  }

  @Override
  public LocalDateTime value6() {
    return getDbModified();
  }

  @Override
  public LocalDateTime value7() {
    return getDbCreated();
  }

  @Override
  public LocalDateTime value8() {
    return getDbImported();
  }

  @Override
  public ViewStructureRecord value1(String value) {
    setId(value);
    return this;
  }

  @Override
  public ViewStructureRecord value2(String value) {
    setParentId(value);
    return this;
  }

  @Override
  public ViewStructureRecord value3(Integer value) {
    setSortOrder(value);
    return this;
  }

  @Override
  public ViewStructureRecord value4(String value) {
    setDescription(value);
    return this;
  }

  @Override
  public ViewStructureRecord value5(String value) {
    setDbModifiedBy(value);
    return this;
  }

  @Override
  public ViewStructureRecord value6(LocalDateTime value) {
    setDbModified(value);
    return this;
  }

  @Override
  public ViewStructureRecord value7(LocalDateTime value) {
    setDbCreated(value);
    return this;
  }

  @Override
  public ViewStructureRecord value8(LocalDateTime value) {
    setDbImported(value);
    return this;
  }

  @Override
  public ViewStructureRecord values(String value1, String value2, Integer value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7, LocalDateTime value8) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    value7(value7);
    value8(value8);
    return this;
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(IViewStructure from) {
    setId(from.getId());
    setParentId(from.getParentId());
    setSortOrder(from.getSortOrder());
    setDescription(from.getDescription());
    setDbModifiedBy(from.getDbModifiedBy());
    setDbModified(from.getDbModified());
    setDbCreated(from.getDbCreated());
    setDbImported(from.getDbImported());
  }

  @Override
  public <E extends IViewStructure> E into(E into) {
    into.from(this);
    return into;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached ViewStructureRecord
   */
  public ViewStructureRecord() {
    super(ViewStructure.VIEW_STRUCTURE);
  }

  /**
   * Create a detached, initialised ViewStructureRecord
   */
  public ViewStructureRecord(String id, String parentId, Integer sortOrder, String description, String dbModifiedBy, LocalDateTime dbModified, LocalDateTime dbCreated, LocalDateTime dbImported) {
    super(ViewStructure.VIEW_STRUCTURE);

    setId(id);
    setParentId(parentId);
    setSortOrder(sortOrder);
    setDescription(description);
    setDbModifiedBy(dbModifiedBy);
    setDbModified(dbModified);
    setDbCreated(dbCreated);
    setDbImported(dbImported);
  }
}
