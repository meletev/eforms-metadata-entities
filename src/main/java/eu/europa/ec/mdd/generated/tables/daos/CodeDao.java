/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.tables.Code;
import eu.europa.ec.mdd.generated.tables.records.CodeRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class CodeDao extends DAOImpl<CodeRecord, eu.europa.ec.mdd.generated.tables.pojos.Code, Record2<String, String>> {

  /**
   * Create a new CodeDao without any configuration
   */
  public CodeDao() {
    super(Code.CODE, eu.europa.ec.mdd.generated.tables.pojos.Code.class);
  }

  /**
   * Create a new CodeDao with an attached configuration
   */
  @Autowired
  public CodeDao(Configuration configuration) {
    super(Code.CODE, eu.europa.ec.mdd.generated.tables.pojos.Code.class, configuration);
  }

  @Override
  public Record2<String, String> getId(eu.europa.ec.mdd.generated.tables.pojos.Code object) {
    return compositeKeyRecord(object.getValue(), object.getCodeListId());
  }

  /**
   * Fetch records that have <code>value BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Code> fetchRangeOfValue(String lowerInclusive, String upperInclusive) {
    return fetchRange(Code.CODE.VALUE, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>value IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Code> fetchByValue(String... values) {
    return fetch(Code.CODE.VALUE, values);
  }

  /**
   * Fetch records that have <code>code_list_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Code> fetchRangeOfCodeListId(String lowerInclusive, String upperInclusive) {
    return fetchRange(Code.CODE.CODE_LIST_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>code_list_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Code> fetchByCodeListId(String... values) {
    return fetch(Code.CODE.CODE_LIST_ID, values);
  }

  /**
   * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Code> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
    return fetchRange(Code.CODE.DESCRIPTION, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>description IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Code> fetchByDescription(String... values) {
    return fetch(Code.CODE.DESCRIPTION, values);
  }
}
