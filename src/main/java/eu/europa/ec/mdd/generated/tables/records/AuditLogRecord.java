/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.records;


import eu.europa.ec.mdd.generated.tables.AuditLog;
import eu.europa.ec.mdd.generated.tables.interfaces.IAuditLog;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditLogRecord extends UpdatableRecordImpl<AuditLogRecord> implements Record5<Integer, String, String, LocalDateTime, String>, IAuditLog {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>audit_log.id</code>.
   */
  @Override
  public void setId(Integer value) {
    set(0, value);
  }

  /**
   * Getter for <code>audit_log.id</code>.
   */
  @Override
  public Integer getId() {
    return (Integer) get(0);
  }

  /**
   * Setter for <code>audit_log.message</code>.
   */
  @Override
  public void setMessage(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>audit_log.message</code>.
   */
  @Override
  public String getMessage() {
    return (String) get(1);
  }

  /**
   * Setter for <code>audit_log.user</code>.
   */
  @Override
  public void setUser(String value) {
    set(2, value);
  }

  /**
   * Getter for <code>audit_log.user</code>.
   */
  @Override
  public String getUser() {
    return (String) get(2);
  }

  /**
   * Setter for <code>audit_log.created_on</code>.
   */
  @Override
  public void setCreatedOn(LocalDateTime value) {
    set(3, value);
  }

  /**
   * Getter for <code>audit_log.created_on</code>.
   */
  @Override
  public LocalDateTime getCreatedOn() {
    return (LocalDateTime) get(3);
  }

  /**
   * Setter for <code>audit_log.host</code>.
   */
  @Override
  public void setHost(String value) {
    set(4, value);
  }

  /**
   * Getter for <code>audit_log.host</code>.
   */
  @Override
  public String getHost() {
    return (String) get(4);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<Integer> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record5 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row5<Integer, String, String, LocalDateTime, String> fieldsRow() {
    return (Row5) super.fieldsRow();
  }

  @Override
  public Row5<Integer, String, String, LocalDateTime, String> valuesRow() {
    return (Row5) super.valuesRow();
  }

  @Override
  public Field<Integer> field1() {
    return AuditLog.AUDIT_LOG.ID;
  }

  @Override
  public Field<String> field2() {
    return AuditLog.AUDIT_LOG.MESSAGE;
  }

  @Override
  public Field<String> field3() {
    return AuditLog.AUDIT_LOG.USER;
  }

  @Override
  public Field<LocalDateTime> field4() {
    return AuditLog.AUDIT_LOG.CREATED_ON;
  }

  @Override
  public Field<String> field5() {
    return AuditLog.AUDIT_LOG.HOST;
  }

  @Override
  public Integer component1() {
    return getId();
  }

  @Override
  public String component2() {
    return getMessage();
  }

  @Override
  public String component3() {
    return getUser();
  }

  @Override
  public LocalDateTime component4() {
    return getCreatedOn();
  }

  @Override
  public String component5() {
    return getHost();
  }

  @Override
  public Integer value1() {
    return getId();
  }

  @Override
  public String value2() {
    return getMessage();
  }

  @Override
  public String value3() {
    return getUser();
  }

  @Override
  public LocalDateTime value4() {
    return getCreatedOn();
  }

  @Override
  public String value5() {
    return getHost();
  }

  @Override
  public AuditLogRecord value1(Integer value) {
    setId(value);
    return this;
  }

  @Override
  public AuditLogRecord value2(String value) {
    setMessage(value);
    return this;
  }

  @Override
  public AuditLogRecord value3(String value) {
    setUser(value);
    return this;
  }

  @Override
  public AuditLogRecord value4(LocalDateTime value) {
    setCreatedOn(value);
    return this;
  }

  @Override
  public AuditLogRecord value5(String value) {
    setHost(value);
    return this;
  }

  @Override
  public AuditLogRecord values(Integer value1, String value2, String value3, LocalDateTime value4, String value5) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    return this;
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(IAuditLog from) {
    setId(from.getId());
    setMessage(from.getMessage());
    setUser(from.getUser());
    setCreatedOn(from.getCreatedOn());
    setHost(from.getHost());
  }

  @Override
  public <E extends IAuditLog> E into(E into) {
    into.from(this);
    return into;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached AuditLogRecord
   */
  public AuditLogRecord() {
    super(AuditLog.AUDIT_LOG);
  }

  /**
   * Create a detached, initialised AuditLogRecord
   */
  public AuditLogRecord(Integer id, String message, String user, LocalDateTime createdOn, String host) {
    super(AuditLog.AUDIT_LOG);

    setId(id);
    setMessage(message);
    setUser(user);
    setCreatedOn(createdOn);
    setHost(host);
  }
}
