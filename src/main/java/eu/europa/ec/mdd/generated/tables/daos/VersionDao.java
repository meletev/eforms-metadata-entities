/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.tables.Version;
import eu.europa.ec.mdd.generated.tables.records.VersionRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class VersionDao extends DAOImpl<VersionRecord, eu.europa.ec.mdd.generated.tables.pojos.Version, String> {

  /**
   * Create a new VersionDao without any configuration
   */
  public VersionDao() {
    super(Version.VERSION, eu.europa.ec.mdd.generated.tables.pojos.Version.class);
  }

  /**
   * Create a new VersionDao with an attached configuration
   */
  @Autowired
  public VersionDao(Configuration configuration) {
    super(Version.VERSION, eu.europa.ec.mdd.generated.tables.pojos.Version.class, configuration);
  }

  @Override
  public String getId(eu.europa.ec.mdd.generated.tables.pojos.Version object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Version> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
    return fetchRange(Version.VERSION.ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Version> fetchById(String... values) {
    return fetch(Version.VERSION.ID, values);
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.Version fetchOneById(String value) {
    return fetchOne(Version.VERSION.ID, value);
  }

  /**
   * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Version> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
    return fetchRange(Version.VERSION.UPDATED_ON, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>updated_on IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Version> fetchByUpdatedOn(LocalDateTime... values) {
    return fetch(Version.VERSION.UPDATED_ON, values);
  }

  /**
   * Fetch records that have <code>up_to_date BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Version> fetchRangeOfUpToDate(Boolean lowerInclusive, Boolean upperInclusive) {
    return fetchRange(Version.VERSION.UP_TO_DATE, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>up_to_date IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Version> fetchByUpToDate(Boolean... values) {
    return fetch(Version.VERSION.UP_TO_DATE, values);
  }
}
