/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.records;


import eu.europa.ec.mdd.generated.tables.TedForm;
import eu.europa.ec.mdd.generated.tables.interfaces.ITedForm;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Standard forms in old TED XML schemas
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TedFormRecord extends UpdatableRecordImpl<TedFormRecord> implements Record2<String, String>, ITedForm {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>ted_form.id</code>.
   */
  @Override
  public void setId(String value) {
    set(0, value);
  }

  /**
   * Getter for <code>ted_form.id</code>.
   */
  @Override
  public String getId() {
    return (String) get(0);
  }

  /**
   * Setter for <code>ted_form.name</code>.
   */
  @Override
  public void setName(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>ted_form.name</code>.
   */
  @Override
  public String getName() {
    return (String) get(1);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<String> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record2 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row2<String, String> fieldsRow() {
    return (Row2) super.fieldsRow();
  }

  @Override
  public Row2<String, String> valuesRow() {
    return (Row2) super.valuesRow();
  }

  @Override
  public Field<String> field1() {
    return TedForm.TED_FORM.ID;
  }

  @Override
  public Field<String> field2() {
    return TedForm.TED_FORM.NAME;
  }

  @Override
  public String component1() {
    return getId();
  }

  @Override
  public String component2() {
    return getName();
  }

  @Override
  public String value1() {
    return getId();
  }

  @Override
  public String value2() {
    return getName();
  }

  @Override
  public TedFormRecord value1(String value) {
    setId(value);
    return this;
  }

  @Override
  public TedFormRecord value2(String value) {
    setName(value);
    return this;
  }

  @Override
  public TedFormRecord values(String value1, String value2) {
    value1(value1);
    value2(value2);
    return this;
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(ITedForm from) {
    setId(from.getId());
    setName(from.getName());
  }

  @Override
  public <E extends ITedForm> E into(E into) {
    into.from(this);
    return into;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached TedFormRecord
   */
  public TedFormRecord() {
    super(TedForm.TED_FORM);
  }

  /**
   * Create a detached, initialised TedFormRecord
   */
  public TedFormRecord(String id, String name) {
    super(TedForm.TED_FORM);

    setId(id);
    setName(name);
  }
}
