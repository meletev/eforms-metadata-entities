/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables;


import eu.europa.ec.mdd.generated.DefaultSchema;
import eu.europa.ec.mdd.generated.Indexes;
import eu.europa.ec.mdd.generated.Keys;
import eu.europa.ec.mdd.generated.tables.records.TedItemRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TedItem extends TableImpl<TedItemRecord> {

  private static final long serialVersionUID = 1L;

  /**
   * The reference instance of <code>ted_item</code>
   */
  public static final TedItem TED_ITEM = new TedItem();

  /**
   * The class holding records for this type
   */
  @Override
  public Class<TedItemRecord> getRecordType() {
    return TedItemRecord.class;
  }

  /**
   * The column <code>ted_item.id</code>.
   */
  public final TableField<TedItemRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

  /**
   * The column <code>ted_item.heading</code>.
   */
  public final TableField<TedItemRecord, String> HEADING = createField(DSL.name("heading"), SQLDataType.VARCHAR(255), this, "");

  /**
   * The column <code>ted_item.name</code>.
   */
  public final TableField<TedItemRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(1024).nullable(false), this, "");

  /**
   * The column <code>ted_item.parent_id</code>.
   */
  public final TableField<TedItemRecord, Integer> PARENT_ID = createField(DSL.name("parent_id"), SQLDataType.INTEGER, this, "");

  /**
   * The column <code>ted_item.form_id</code>.
   */
  public final TableField<TedItemRecord, String> FORM_ID = createField(DSL.name("form_id"), SQLDataType.VARCHAR(10).nullable(false), this, "");

  /**
   * The column <code>ted_item.xpath</code>.
   */
  public final TableField<TedItemRecord, String> XPATH = createField(DSL.name("xpath"), SQLDataType.VARCHAR(1024), this, "");

  private TedItem(Name alias, Table<TedItemRecord> aliased) {
    this(alias, aliased, null);
  }

  private TedItem(Name alias, Table<TedItemRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  /**
   * Create an aliased <code>ted_item</code> table reference
   */
  public TedItem(String alias) {
    this(DSL.name(alias), TED_ITEM);
  }

  /**
   * Create an aliased <code>ted_item</code> table reference
   */
  public TedItem(Name alias) {
    this(alias, TED_ITEM);
  }

  /**
   * Create a <code>ted_item</code> table reference
   */
  public TedItem() {
    this(DSL.name("ted_item"), null);
  }

  public <O extends Record> TedItem(Table<O> child, ForeignKey<O, TedItemRecord> key) {
    super(child, key, TED_ITEM);
  }

  @Override
  public Schema getSchema() {
    return DefaultSchema.DEFAULT_SCHEMA;
  }

  @Override
  public List<Index> getIndexes() {
    return Arrays.<Index>asList(Indexes.TED_ITEM_FORM_ID, Indexes.TED_ITEM_PARENT_ID);
  }

  @Override
  public Identity<TedItemRecord, Integer> getIdentity() {
    return (Identity<TedItemRecord, Integer>) super.getIdentity();
  }

  @Override
  public UniqueKey<TedItemRecord> getPrimaryKey() {
    return Keys.KEY_TED_ITEM_PRIMARY;
  }

  @Override
  public List<UniqueKey<TedItemRecord>> getKeys() {
    return Arrays.<UniqueKey<TedItemRecord>>asList(Keys.KEY_TED_ITEM_PRIMARY);
  }

  @Override
  public List<ForeignKey<TedItemRecord, ?>> getReferences() {
    return Arrays.<ForeignKey<TedItemRecord, ?>>asList(Keys.TED_ITEM_IBFK_1, Keys.TED_ITEM_IBFK_2);
  }

  private transient TedItem _tedItem;
  private transient TedForm _tedForm;

  public TedItem tedItem() {
    if (_tedItem == null)
      _tedItem = new TedItem(this, Keys.TED_ITEM_IBFK_1);

    return _tedItem;
  }

  public TedForm tedForm() {
    if (_tedForm == null)
      _tedForm = new TedForm(this, Keys.TED_ITEM_IBFK_2);

    return _tedForm;
  }

  @Override
  public TedItem as(String alias) {
    return new TedItem(DSL.name(alias), this);
  }

  @Override
  public TedItem as(Name alias) {
    return new TedItem(alias, this);
  }

  /**
   * Rename this table
   */
  @Override
  public TedItem rename(String name) {
    return new TedItem(DSL.name(name), null);
  }

  /**
   * Rename this table
   */
  @Override
  public TedItem rename(Name name) {
    return new TedItem(name, null);
  }

  // -------------------------------------------------------------------------
  // Row6 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row6<Integer, String, String, Integer, String, String> fieldsRow() {
    return (Row6) super.fieldsRow();
  }
}
