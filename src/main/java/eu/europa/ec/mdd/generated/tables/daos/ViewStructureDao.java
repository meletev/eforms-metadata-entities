/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.tables.ViewStructure;
import eu.europa.ec.mdd.generated.tables.records.ViewStructureRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ViewStructureDao extends DAOImpl<ViewStructureRecord, eu.europa.ec.mdd.generated.tables.pojos.ViewStructure, String> {

  /**
   * Create a new ViewStructureDao without any configuration
   */
  public ViewStructureDao() {
    super(ViewStructure.VIEW_STRUCTURE, eu.europa.ec.mdd.generated.tables.pojos.ViewStructure.class);
  }

  /**
   * Create a new ViewStructureDao with an attached configuration
   */
  @Autowired
  public ViewStructureDao(Configuration configuration) {
    super(ViewStructure.VIEW_STRUCTURE, eu.europa.ec.mdd.generated.tables.pojos.ViewStructure.class, configuration);
  }

  @Override
  public String getId(eu.europa.ec.mdd.generated.tables.pojos.ViewStructure object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
    return fetchRange(ViewStructure.VIEW_STRUCTURE.ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchById(String... values) {
    return fetch(ViewStructure.VIEW_STRUCTURE.ID, values);
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.ViewStructure fetchOneById(String value) {
    return fetchOne(ViewStructure.VIEW_STRUCTURE.ID, value);
  }

  /**
   * Fetch records that have <code>parent_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchRangeOfParentId(String lowerInclusive, String upperInclusive) {
    return fetchRange(ViewStructure.VIEW_STRUCTURE.PARENT_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>parent_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchByParentId(String... values) {
    return fetch(ViewStructure.VIEW_STRUCTURE.PARENT_ID, values);
  }

  /**
   * Fetch records that have <code>sort_order BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchRangeOfSortOrder(Integer lowerInclusive, Integer upperInclusive) {
    return fetchRange(ViewStructure.VIEW_STRUCTURE.SORT_ORDER, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>sort_order IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchBySortOrder(Integer... values) {
    return fetch(ViewStructure.VIEW_STRUCTURE.SORT_ORDER, values);
  }

  /**
   * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
    return fetchRange(ViewStructure.VIEW_STRUCTURE.DESCRIPTION, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>description IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchByDescription(String... values) {
    return fetch(ViewStructure.VIEW_STRUCTURE.DESCRIPTION, values);
  }

  /**
   * Fetch records that have <code>db_modified_by BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchRangeOfDbModifiedBy(String lowerInclusive, String upperInclusive) {
    return fetchRange(ViewStructure.VIEW_STRUCTURE.DB_MODIFIED_BY, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>db_modified_by IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchByDbModifiedBy(String... values) {
    return fetch(ViewStructure.VIEW_STRUCTURE.DB_MODIFIED_BY, values);
  }

  /**
   * Fetch records that have <code>db_modified BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchRangeOfDbModified(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
    return fetchRange(ViewStructure.VIEW_STRUCTURE.DB_MODIFIED, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>db_modified IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchByDbModified(LocalDateTime... values) {
    return fetch(ViewStructure.VIEW_STRUCTURE.DB_MODIFIED, values);
  }

  /**
   * Fetch records that have <code>db_created BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchRangeOfDbCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
    return fetchRange(ViewStructure.VIEW_STRUCTURE.DB_CREATED, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>db_created IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchByDbCreated(LocalDateTime... values) {
    return fetch(ViewStructure.VIEW_STRUCTURE.DB_CREATED, values);
  }

  /**
   * Fetch records that have <code>db_imported BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchRangeOfDbImported(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
    return fetchRange(ViewStructure.VIEW_STRUCTURE.DB_IMPORTED, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>db_imported IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewStructure> fetchByDbImported(LocalDateTime... values) {
    return fetch(ViewStructure.VIEW_STRUCTURE.DB_IMPORTED, values);
  }
}
