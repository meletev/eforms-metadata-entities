/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.tables.IdentifierReference;
import eu.europa.ec.mdd.generated.tables.records.IdentifierReferenceRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class IdentifierReferenceDao extends DAOImpl<IdentifierReferenceRecord, eu.europa.ec.mdd.generated.tables.pojos.IdentifierReference, Record2<String, String>> {

  /**
   * Create a new IdentifierReferenceDao without any configuration
   */
  public IdentifierReferenceDao() {
    super(IdentifierReference.IDENTIFIER_REFERENCE, eu.europa.ec.mdd.generated.tables.pojos.IdentifierReference.class);
  }

  /**
   * Create a new IdentifierReferenceDao with an attached configuration
   */
  @Autowired
  public IdentifierReferenceDao(Configuration configuration) {
    super(IdentifierReference.IDENTIFIER_REFERENCE, eu.europa.ec.mdd.generated.tables.pojos.IdentifierReference.class, configuration);
  }

  @Override
  public Record2<String, String> getId(eu.europa.ec.mdd.generated.tables.pojos.IdentifierReference object) {
    return compositeKeyRecord(object.getIdentifierSchemeId(), object.getFieldId());
  }

  /**
   * Fetch records that have <code>identifier_scheme_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.IdentifierReference> fetchRangeOfIdentifierSchemeId(String lowerInclusive, String upperInclusive) {
    return fetchRange(IdentifierReference.IDENTIFIER_REFERENCE.IDENTIFIER_SCHEME_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>identifier_scheme_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.IdentifierReference> fetchByIdentifierSchemeId(String... values) {
    return fetch(IdentifierReference.IDENTIFIER_REFERENCE.IDENTIFIER_SCHEME_ID, values);
  }

  /**
   * Fetch records that have <code>field_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.IdentifierReference> fetchRangeOfFieldId(String lowerInclusive, String upperInclusive) {
    return fetchRange(IdentifierReference.IDENTIFIER_REFERENCE.FIELD_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>field_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.IdentifierReference> fetchByFieldId(String... values) {
    return fetch(IdentifierReference.IDENTIFIER_REFERENCE.FIELD_ID, values);
  }
}
