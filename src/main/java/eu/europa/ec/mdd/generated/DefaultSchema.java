/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated;


import eu.europa.ec.mdd.generated.tables.AllFieldsFullXpaths;
import eu.europa.ec.mdd.generated.tables.AuditLog;
import eu.europa.ec.mdd.generated.tables.BusinessRule;
import eu.europa.ec.mdd.generated.tables.BusinessRuleBusinessRuleSource;
import eu.europa.ec.mdd.generated.tables.BusinessRuleSource;
import eu.europa.ec.mdd.generated.tables.BusinessTerm;
import eu.europa.ec.mdd.generated.tables.Code;
import eu.europa.ec.mdd.generated.tables.CodeList;
import eu.europa.ec.mdd.generated.tables.CodeListToCode;
import eu.europa.ec.mdd.generated.tables.Condition;
import eu.europa.ec.mdd.generated.tables.CountBusinessRulesSourceWithoutBusinessRules;
import eu.europa.ec.mdd.generated.tables.CountBusinessRulesWithoutSource;
import eu.europa.ec.mdd.generated.tables.CountDraftBusinessRules;
import eu.europa.ec.mdd.generated.tables.DataType;
import eu.europa.ec.mdd.generated.tables.Databasechangelog;
import eu.europa.ec.mdd.generated.tables.Databasechangeloglock;
import eu.europa.ec.mdd.generated.tables.DisplayGroup;
import eu.europa.ec.mdd.generated.tables.DocumentType;
import eu.europa.ec.mdd.generated.tables.Field;
import eu.europa.ec.mdd.generated.tables.Interval;
import eu.europa.ec.mdd.generated.tables.Label;
import eu.europa.ec.mdd.generated.tables.Node;
import eu.europa.ec.mdd.generated.tables.Notice;
import eu.europa.ec.mdd.generated.tables.NoticeToView;
import eu.europa.ec.mdd.generated.tables.OldViewTemplate;
import eu.europa.ec.mdd.generated.tables.Pattern;
import eu.europa.ec.mdd.generated.tables.TedForm;
import eu.europa.ec.mdd.generated.tables.TedFormNotice;
import eu.europa.ec.mdd.generated.tables.TedItem;
import eu.europa.ec.mdd.generated.tables.TedItemField;
import eu.europa.ec.mdd.generated.tables.TedXmlRaw;
import eu.europa.ec.mdd.generated.tables.TedxmlToEformsMapping;
import eu.europa.ec.mdd.generated.tables.Version;
import eu.europa.ec.mdd.generated.tables.View;
import eu.europa.ec.mdd.generated.tables.ViewRelationships;
import eu.europa.ec.mdd.generated.tables.ViewStructure;
import eu.europa.ec.mdd.generated.tables.ViewTemplate;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefaultSchema extends SchemaImpl {

  private static final long serialVersionUID = 1L;

  /**
   * The reference instance of <code>DEFAULT_SCHEMA</code>
   */
  public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

  /**
   * VIEW
   */
  public final AllFieldsFullXpaths ALL_FIELDS_FULL_XPATHS = AllFieldsFullXpaths.ALL_FIELDS_FULL_XPATHS;

  /**
   * The table <code>audit_log</code>.
   */
  public final AuditLog AUDIT_LOG = AuditLog.AUDIT_LOG;

  /**
   * The table <code>business_rule</code>.
   */
  public final BusinessRule BUSINESS_RULE = BusinessRule.BUSINESS_RULE;

  /**
   * The table <code>business_rule_business_rule_source</code>.
   */
  public final BusinessRuleBusinessRuleSource BUSINESS_RULE_BUSINESS_RULE_SOURCE = BusinessRuleBusinessRuleSource.BUSINESS_RULE_BUSINESS_RULE_SOURCE;

  /**
   * The table <code>business_rule_source</code>.
   */
  public final BusinessRuleSource BUSINESS_RULE_SOURCE = BusinessRuleSource.BUSINESS_RULE_SOURCE;

  /**
   * The table <code>business_term</code>.
   */
  public final BusinessTerm BUSINESS_TERM = BusinessTerm.BUSINESS_TERM;

  /**
   * The table <code>code</code>.
   */
  public final Code CODE = Code.CODE;

  /**
   * The table <code>code_list</code>.
   */
  public final CodeList CODE_LIST = CodeList.CODE_LIST;

  /**
   * The table <code>code_list_to_code</code>.
   */
  public final CodeListToCode CODE_LIST_TO_CODE = CodeListToCode.CODE_LIST_TO_CODE;

  /**
   * The table <code>condition</code>.
   */
  public final Condition CONDITION = Condition.CONDITION;

  /**
   * VIEW
   */
  public final CountBusinessRulesSourceWithoutBusinessRules COUNT_BUSINESS_RULES_SOURCE_WITHOUT_BUSINESS_RULES = CountBusinessRulesSourceWithoutBusinessRules.COUNT_BUSINESS_RULES_SOURCE_WITHOUT_BUSINESS_RULES;

  /**
   * VIEW
   */
  public final CountBusinessRulesWithoutSource COUNT_BUSINESS_RULES_WITHOUT_SOURCE = CountBusinessRulesWithoutSource.COUNT_BUSINESS_RULES_WITHOUT_SOURCE;

  /**
   * VIEW
   */
  public final CountDraftBusinessRules COUNT_DRAFT_BUSINESS_RULES = CountDraftBusinessRules.COUNT_DRAFT_BUSINESS_RULES;

  /**
   * The table <code>data_type</code>.
   */
  public final DataType DATA_TYPE = DataType.DATA_TYPE;

  /**
   * The table <code>DATABASECHANGELOG</code>.
   */
  public final Databasechangelog DATABASECHANGELOG = Databasechangelog.DATABASECHANGELOG;

  /**
   * The table <code>DATABASECHANGELOGLOCK</code>.
   */
  public final Databasechangeloglock DATABASECHANGELOGLOCK = Databasechangeloglock.DATABASECHANGELOGLOCK;

  /**
   * The table <code>display_group</code>.
   */
  public final DisplayGroup DISPLAY_GROUP = DisplayGroup.DISPLAY_GROUP;

  /**
   * The table <code>document_type</code>.
   */
  public final DocumentType DOCUMENT_TYPE = DocumentType.DOCUMENT_TYPE;

  /**
   * The table <code>field</code>.
   */
  public final Field FIELD = Field.FIELD;

  /**
   * The table <code>interval</code>.
   */
  public final Interval INTERVAL = Interval.INTERVAL;

  /**
   * The table <code>label</code>.
   */
  public final Label LABEL = Label.LABEL;

  /**
   * Contains XML nodes that contain other nodes or fields. Used to represent the XML structure except the leaf nodes (which are the fields).
   */
  public final Node NODE = Node.NODE;

  /**
   * The table <code>notice</code>.
   */
  public final Notice NOTICE = Notice.NOTICE;

  /**
   * The table <code>notice_to_view</code>.
   */
  public final NoticeToView NOTICE_TO_VIEW = NoticeToView.NOTICE_TO_VIEW;

  /**
   * The table <code>old_view_template</code>.
   */
  public final OldViewTemplate OLD_VIEW_TEMPLATE = OldViewTemplate.OLD_VIEW_TEMPLATE;

  /**
   * The table <code>pattern</code>.
   */
  public final Pattern PATTERN = Pattern.PATTERN;

  /**
   * Standard forms in old TED XML schemas
   */
  public final TedForm TED_FORM = TedForm.TED_FORM;

  /**
   * The table <code>ted_form_notice</code>.
   */
  public final TedFormNotice TED_FORM_NOTICE = TedFormNotice.TED_FORM_NOTICE;

  /**
   * The table <code>ted_item</code>.
   */
  public final TedItem TED_ITEM = TedItem.TED_ITEM;

  /**
   * The table <code>ted_item_field</code>.
   */
  public final TedItemField TED_ITEM_FIELD = TedItemField.TED_ITEM_FIELD;

  /**
   * The table <code>ted_xml_raw</code>.
   */
  public final TedXmlRaw TED_XML_RAW = TedXmlRaw.TED_XML_RAW;

  /**
   * VIEW
   */
  public final TedxmlToEformsMapping TEDXML_TO_EFORMS_MAPPING = TedxmlToEformsMapping.TEDXML_TO_EFORMS_MAPPING;

  /**
   * The table <code>version</code>.
   */
  public final Version VERSION = Version.VERSION;

  /**
   * The table <code>view</code>.
   */
  public final View VIEW = View.VIEW;

  /**
   * The table <code>view_relationships</code>.
   */
  public final ViewRelationships VIEW_RELATIONSHIPS = ViewRelationships.VIEW_RELATIONSHIPS;

  /**
   * The table <code>view_structure</code>.
   */
  public final ViewStructure VIEW_STRUCTURE = ViewStructure.VIEW_STRUCTURE;

  /**
   * The table <code>view_template</code>.
   */
  public final ViewTemplate VIEW_TEMPLATE = ViewTemplate.VIEW_TEMPLATE;

  /**
   * No further instances allowed
   */
  private DefaultSchema() {
    super("", null);
  }


  @Override
  public Catalog getCatalog() {
    return DefaultCatalog.DEFAULT_CATALOG;
  }

  @Override
  public final List<Table<?>> getTables() {
    return Arrays.<Table<?>>asList(
      AllFieldsFullXpaths.ALL_FIELDS_FULL_XPATHS,
      AuditLog.AUDIT_LOG,
      BusinessRule.BUSINESS_RULE,
      BusinessRuleBusinessRuleSource.BUSINESS_RULE_BUSINESS_RULE_SOURCE,
      BusinessRuleSource.BUSINESS_RULE_SOURCE,
      BusinessTerm.BUSINESS_TERM,
      Code.CODE,
      CodeList.CODE_LIST,
      CodeListToCode.CODE_LIST_TO_CODE,
      Condition.CONDITION,
      CountBusinessRulesSourceWithoutBusinessRules.COUNT_BUSINESS_RULES_SOURCE_WITHOUT_BUSINESS_RULES,
      CountBusinessRulesWithoutSource.COUNT_BUSINESS_RULES_WITHOUT_SOURCE,
      CountDraftBusinessRules.COUNT_DRAFT_BUSINESS_RULES,
      DataType.DATA_TYPE,
      Databasechangelog.DATABASECHANGELOG,
      Databasechangeloglock.DATABASECHANGELOGLOCK,
      DisplayGroup.DISPLAY_GROUP,
      DocumentType.DOCUMENT_TYPE,
      Field.FIELD,
      Interval.INTERVAL,
      Label.LABEL,
      Node.NODE,
      Notice.NOTICE,
      NoticeToView.NOTICE_TO_VIEW,
      OldViewTemplate.OLD_VIEW_TEMPLATE,
      Pattern.PATTERN,
      TedForm.TED_FORM,
      TedFormNotice.TED_FORM_NOTICE,
      TedItem.TED_ITEM,
      TedItemField.TED_ITEM_FIELD,
      TedXmlRaw.TED_XML_RAW,
      TedxmlToEformsMapping.TEDXML_TO_EFORMS_MAPPING,
      Version.VERSION,
      View.VIEW,
      ViewRelationships.VIEW_RELATIONSHIPS,
      ViewStructure.VIEW_STRUCTURE,
      ViewTemplate.VIEW_TEMPLATE);
  }
}
