/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.pojos;


import eu.europa.ec.mdd.generated.tables.interfaces.IDocumentType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocumentType implements IDocumentType {

  private static final long serialVersionUID = 1L;

  private String id;
  private String namespace;
  private String rootElement;
  private String schemaLocation;

  public DocumentType() {}

  public DocumentType(IDocumentType value) {
    this.id = value.getId();
    this.namespace = value.getNamespace();
    this.rootElement = value.getRootElement();
    this.schemaLocation = value.getSchemaLocation();
  }

  public DocumentType(
    String id,
    String namespace,
    String rootElement,
    String schemaLocation
  ) {
    this.id = id;
    this.namespace = namespace;
    this.rootElement = rootElement;
    this.schemaLocation = schemaLocation;
  }

  /**
   * Getter for <code>document_type.id</code>.
   */
  @Override
  public String getId() {
    return this.id;
  }

  /**
   * Setter for <code>document_type.id</code>.
   */
  @Override
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Getter for <code>document_type.namespace</code>.
   */
  @Override
  public String getNamespace() {
    return this.namespace;
  }

  /**
   * Setter for <code>document_type.namespace</code>.
   */
  @Override
  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }

  /**
   * Getter for <code>document_type.root_element</code>.
   */
  @Override
  public String getRootElement() {
    return this.rootElement;
  }

  /**
   * Setter for <code>document_type.root_element</code>.
   */
  @Override
  public void setRootElement(String rootElement) {
    this.rootElement = rootElement;
  }

  /**
   * Getter for <code>document_type.schema_location</code>. Location of the main xsd file relative to the SDK root folder, no slash at start
   */
  @Override
  public String getSchemaLocation() {
    return this.schemaLocation;
  }

  /**
   * Setter for <code>document_type.schema_location</code>. Location of the main xsd file relative to the SDK root folder, no slash at start
   */
  @Override
  public void setSchemaLocation(String schemaLocation) {
    this.schemaLocation = schemaLocation;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("DocumentType (");

    sb.append(id);
    sb.append(", ").append(namespace);
    sb.append(", ").append(rootElement);
    sb.append(", ").append(schemaLocation);

    sb.append(")");
    return sb.toString();
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(IDocumentType from) {
    setId(from.getId());
    setNamespace(from.getNamespace());
    setRootElement(from.getRootElement());
    setSchemaLocation(from.getSchemaLocation());
  }

  @Override
  public <E extends IDocumentType> E into(E into) {
    into.from(this);
    return into;
  }
}
