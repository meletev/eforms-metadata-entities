/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.pojos;


import eu.europa.ec.mdd.generated.tables.interfaces.IPattern;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pattern implements IPattern {

  private static final long serialVersionUID = 1L;

  private String id;
  private String value;

  public Pattern() {}

  public Pattern(IPattern value) {
    this.id = value.getId();
    this.value = value.getValue();
  }

  public Pattern(
    String id,
    String value
  ) {
    this.id = id;
    this.value = value;
  }

  /**
   * Getter for <code>pattern.id</code>.
   */
  @Override
  public String getId() {
    return this.id;
  }

  /**
   * Setter for <code>pattern.id</code>.
   */
  @Override
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Getter for <code>pattern.value</code>.
   */
  @Override
  public String getValue() {
    return this.value;
  }

  /**
   * Setter for <code>pattern.value</code>.
   */
  @Override
  public void setValue(String value) {
    this.value = value;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Pattern (");

    sb.append(id);
    sb.append(", ").append(value);

    sb.append(")");
    return sb.toString();
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(IPattern from) {
    setId(from.getId());
    setValue(from.getValue());
  }

  @Override
  public <E extends IPattern> E into(E into) {
    into.from(this);
    return into;
  }
}
