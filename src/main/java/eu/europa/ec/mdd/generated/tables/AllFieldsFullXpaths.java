/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables;


import eu.europa.ec.mdd.generated.DefaultSchema;
import eu.europa.ec.mdd.generated.enums.AllFieldsFullXpathsType;
import eu.europa.ec.mdd.generated.tables.records.AllFieldsFullXpathsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllFieldsFullXpaths extends TableImpl<AllFieldsFullXpathsRecord> {

  private static final long serialVersionUID = 1L;

  /**
   * The reference instance of <code>all_fields_full_xpaths</code>
   */
  public static final AllFieldsFullXpaths ALL_FIELDS_FULL_XPATHS = new AllFieldsFullXpaths();

  /**
   * The class holding records for this type
   */
  @Override
  public Class<AllFieldsFullXpathsRecord> getRecordType() {
    return AllFieldsFullXpathsRecord.class;
  }

  /**
   * The column <code>all_fields_full_xpaths.id</code>.
   */
  public final TableField<AllFieldsFullXpathsRecord, String> ID = createField(DSL.name("id"), SQLDataType.VARCHAR(255).nullable(false), this, "");

  /**
   * The column <code>all_fields_full_xpaths.business_term_id</code>.
   */
  public final TableField<AllFieldsFullXpathsRecord, String> BUSINESS_TERM_ID = createField(DSL.name("business_term_id"), SQLDataType.VARCHAR(255), this, "");

  /**
   * The column <code>all_fields_full_xpaths.description</code>.
   */
  public final TableField<AllFieldsFullXpathsRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.VARCHAR(255), this, "");

  /**
   * The column <code>all_fields_full_xpaths.relative_path</code>.
   */
  public final TableField<AllFieldsFullXpathsRecord, String> RELATIVE_PATH = createField(DSL.name("relative_path"), SQLDataType.VARCHAR(255).nullable(false), this, "");

  /**
   * The column <code>all_fields_full_xpaths.type</code>.
   */
  public final TableField<AllFieldsFullXpathsRecord, AllFieldsFullXpathsType> TYPE = createField(DSL.name("type"), SQLDataType.VARCHAR(17).nullable(false).asEnumDataType(eu.europa.ec.mdd.generated.enums.AllFieldsFullXpathsType.class), this, "");

  /**
   * The column <code>all_fields_full_xpaths.absolute_path</code>.
   */
  public final TableField<AllFieldsFullXpathsRecord, String> ABSOLUTE_PATH = createField(DSL.name("absolute_path"), SQLDataType.CLOB, this, "");

  private AllFieldsFullXpaths(Name alias, Table<AllFieldsFullXpathsRecord> aliased) {
    this(alias, aliased, null);
  }

  private AllFieldsFullXpaths(Name alias, Table<AllFieldsFullXpathsRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment("VIEW"), TableOptions.view("create view `all_fields_full_xpaths` as select `TEDEFO_DEV_MDD_EM`.`field`.`id` AS `id`,`TEDEFO_DEV_MDD_EM`.`field`.`business_term_id` AS `business_term_id`,`TEDEFO_DEV_MDD_EM`.`field`.`description` AS `description`,`TEDEFO_DEV_MDD_EM`.`field`.`relative_path` AS `relative_path`,`TEDEFO_DEV_MDD_EM`.`field`.`type` AS `type`,concat(`GET_XPATH_ABSOLUTE`(`TEDEFO_DEV_MDD_EM`.`field`.`parent_node_id`),'/',`TEDEFO_DEV_MDD_EM`.`field`.`relative_path`) AS `absolute_path` from `TEDEFO_DEV_MDD_EM`.`field`"));
  }

  /**
   * Create an aliased <code>all_fields_full_xpaths</code> table reference
   */
  public AllFieldsFullXpaths(String alias) {
    this(DSL.name(alias), ALL_FIELDS_FULL_XPATHS);
  }

  /**
   * Create an aliased <code>all_fields_full_xpaths</code> table reference
   */
  public AllFieldsFullXpaths(Name alias) {
    this(alias, ALL_FIELDS_FULL_XPATHS);
  }

  /**
   * Create a <code>all_fields_full_xpaths</code> table reference
   */
  public AllFieldsFullXpaths() {
    this(DSL.name("all_fields_full_xpaths"), null);
  }

  public <O extends Record> AllFieldsFullXpaths(Table<O> child, ForeignKey<O, AllFieldsFullXpathsRecord> key) {
    super(child, key, ALL_FIELDS_FULL_XPATHS);
  }

  @Override
  public Schema getSchema() {
    return DefaultSchema.DEFAULT_SCHEMA;
  }

  @Override
  public AllFieldsFullXpaths as(String alias) {
    return new AllFieldsFullXpaths(DSL.name(alias), this);
  }

  @Override
  public AllFieldsFullXpaths as(Name alias) {
    return new AllFieldsFullXpaths(alias, this);
  }

  /**
   * Rename this table
   */
  @Override
  public AllFieldsFullXpaths rename(String name) {
    return new AllFieldsFullXpaths(DSL.name(name), null);
  }

  /**
   * Rename this table
   */
  @Override
  public AllFieldsFullXpaths rename(Name name) {
    return new AllFieldsFullXpaths(name, null);
  }

  // -------------------------------------------------------------------------
  // Row6 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row6<String, String, String, String, AllFieldsFullXpathsType, String> fieldsRow() {
    return (Row6) super.fieldsRow();
  }
}
