/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.tables.ViewTemplate;
import eu.europa.ec.mdd.generated.tables.records.ViewTemplateRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ViewTemplateDao extends DAOImpl<ViewTemplateRecord, eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate, String> {

  /**
   * Create a new ViewTemplateDao without any configuration
   */
  public ViewTemplateDao() {
    super(ViewTemplate.VIEW_TEMPLATE, eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate.class);
  }

  /**
   * Create a new ViewTemplateDao with an attached configuration
   */
  @Autowired
  public ViewTemplateDao(Configuration configuration) {
    super(ViewTemplate.VIEW_TEMPLATE, eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate.class, configuration);
  }

  @Override
  public String getId(eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
    return fetchRange(ViewTemplate.VIEW_TEMPLATE.ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchById(String... values) {
    return fetch(ViewTemplate.VIEW_TEMPLATE.ID, values);
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate fetchOneById(String value) {
    return fetchOne(ViewTemplate.VIEW_TEMPLATE.ID, value);
  }

  /**
   * Fetch records that have <code>template BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchRangeOfTemplate(String lowerInclusive, String upperInclusive) {
    return fetchRange(ViewTemplate.VIEW_TEMPLATE.TEMPLATE, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>template IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchByTemplate(String... values) {
    return fetch(ViewTemplate.VIEW_TEMPLATE.TEMPLATE, values);
  }

  /**
   * Fetch records that have <code>draft BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchRangeOfDraft(Boolean lowerInclusive, Boolean upperInclusive) {
    return fetchRange(ViewTemplate.VIEW_TEMPLATE.DRAFT, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>draft IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchByDraft(Boolean... values) {
    return fetch(ViewTemplate.VIEW_TEMPLATE.DRAFT, values);
  }

  /**
   * Fetch records that have <code>draft_reason BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchRangeOfDraftReason(String lowerInclusive, String upperInclusive) {
    return fetchRange(ViewTemplate.VIEW_TEMPLATE.DRAFT_REASON, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>draft_reason IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchByDraftReason(String... values) {
    return fetch(ViewTemplate.VIEW_TEMPLATE.DRAFT_REASON, values);
  }

  /**
   * Fetch records that have <code>db_modified BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchRangeOfDbModified(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
    return fetchRange(ViewTemplate.VIEW_TEMPLATE.DB_MODIFIED, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>db_modified IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchByDbModified(LocalDateTime... values) {
    return fetch(ViewTemplate.VIEW_TEMPLATE.DB_MODIFIED, values);
  }

  /**
   * Fetch records that have <code>db_modified_by BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchRangeOfDbModifiedBy(String lowerInclusive, String upperInclusive) {
    return fetchRange(ViewTemplate.VIEW_TEMPLATE.DB_MODIFIED_BY, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>db_modified_by IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchByDbModifiedBy(String... values) {
    return fetch(ViewTemplate.VIEW_TEMPLATE.DB_MODIFIED_BY, values);
  }

  /**
   * Fetch records that have <code>db_created BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchRangeOfDbCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
    return fetchRange(ViewTemplate.VIEW_TEMPLATE.DB_CREATED, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>db_created IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchByDbCreated(LocalDateTime... values) {
    return fetch(ViewTemplate.VIEW_TEMPLATE.DB_CREATED, values);
  }

  /**
   * Fetch records that have <code>db_imported BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchRangeOfDbImported(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
    return fetchRange(ViewTemplate.VIEW_TEMPLATE.DB_IMPORTED, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>db_imported IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.ViewTemplate> fetchByDbImported(LocalDateTime... values) {
    return fetch(ViewTemplate.VIEW_TEMPLATE.DB_IMPORTED, values);
  }
}
