/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.records;


import eu.europa.ec.mdd.generated.tables.TedItemField;
import eu.europa.ec.mdd.generated.tables.interfaces.ITedItemField;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TedItemFieldRecord extends UpdatableRecordImpl<TedItemFieldRecord> implements Record2<Integer, String>, ITedItemField {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>ted_item_field.ted_item_id</code>.
   */
  @Override
  public void setTedItemId(Integer value) {
    set(0, value);
  }

  /**
   * Getter for <code>ted_item_field.ted_item_id</code>.
   */
  @Override
  public Integer getTedItemId() {
    return (Integer) get(0);
  }

  /**
   * Setter for <code>ted_item_field.field_id</code>.
   */
  @Override
  public void setFieldId(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>ted_item_field.field_id</code>.
   */
  @Override
  public String getFieldId() {
    return (String) get(1);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record2<Integer, String> key() {
    return (Record2) super.key();
  }

  // -------------------------------------------------------------------------
  // Record2 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row2<Integer, String> fieldsRow() {
    return (Row2) super.fieldsRow();
  }

  @Override
  public Row2<Integer, String> valuesRow() {
    return (Row2) super.valuesRow();
  }

  @Override
  public Field<Integer> field1() {
    return TedItemField.TED_ITEM_FIELD.TED_ITEM_ID;
  }

  @Override
  public Field<String> field2() {
    return TedItemField.TED_ITEM_FIELD.FIELD_ID;
  }

  @Override
  public Integer component1() {
    return getTedItemId();
  }

  @Override
  public String component2() {
    return getFieldId();
  }

  @Override
  public Integer value1() {
    return getTedItemId();
  }

  @Override
  public String value2() {
    return getFieldId();
  }

  @Override
  public TedItemFieldRecord value1(Integer value) {
    setTedItemId(value);
    return this;
  }

  @Override
  public TedItemFieldRecord value2(String value) {
    setFieldId(value);
    return this;
  }

  @Override
  public TedItemFieldRecord values(Integer value1, String value2) {
    value1(value1);
    value2(value2);
    return this;
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(ITedItemField from) {
    setTedItemId(from.getTedItemId());
    setFieldId(from.getFieldId());
  }

  @Override
  public <E extends ITedItemField> E into(E into) {
    into.from(this);
    return into;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached TedItemFieldRecord
   */
  public TedItemFieldRecord() {
    super(TedItemField.TED_ITEM_FIELD);
  }

  /**
   * Create a detached, initialised TedItemFieldRecord
   */
  public TedItemFieldRecord(Integer tedItemId, String fieldId) {
    super(TedItemField.TED_ITEM_FIELD);

    setTedItemId(tedItemId);
    setFieldId(fieldId);
  }
}
