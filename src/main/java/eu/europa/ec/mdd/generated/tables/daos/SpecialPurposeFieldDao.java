/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.tables.SpecialPurposeField;
import eu.europa.ec.mdd.generated.tables.records.SpecialPurposeFieldRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SpecialPurposeFieldDao extends DAOImpl<SpecialPurposeFieldRecord, eu.europa.ec.mdd.generated.tables.pojos.SpecialPurposeField, String> {

  /**
   * Create a new SpecialPurposeFieldDao without any configuration
   */
  public SpecialPurposeFieldDao() {
    super(SpecialPurposeField.SPECIAL_PURPOSE_FIELD, eu.europa.ec.mdd.generated.tables.pojos.SpecialPurposeField.class);
  }

  /**
   * Create a new SpecialPurposeFieldDao with an attached configuration
   */
  @Autowired
  public SpecialPurposeFieldDao(Configuration configuration) {
    super(SpecialPurposeField.SPECIAL_PURPOSE_FIELD, eu.europa.ec.mdd.generated.tables.pojos.SpecialPurposeField.class, configuration);
  }

  @Override
  public String getId(eu.europa.ec.mdd.generated.tables.pojos.SpecialPurposeField object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.SpecialPurposeField> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
    return fetchRange(SpecialPurposeField.SPECIAL_PURPOSE_FIELD.ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.SpecialPurposeField> fetchById(String... values) {
    return fetch(SpecialPurposeField.SPECIAL_PURPOSE_FIELD.ID, values);
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.SpecialPurposeField fetchOneById(String value) {
    return fetchOne(SpecialPurposeField.SPECIAL_PURPOSE_FIELD.ID, value);
  }

  /**
   * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.SpecialPurposeField> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
    return fetchRange(SpecialPurposeField.SPECIAL_PURPOSE_FIELD.DESCRIPTION, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>description IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.SpecialPurposeField> fetchByDescription(String... values) {
    return fetch(SpecialPurposeField.SPECIAL_PURPOSE_FIELD.DESCRIPTION, values);
  }

  /**
   * Fetch a unique record that has <code>description = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.SpecialPurposeField fetchOneByDescription(String value) {
    return fetchOne(SpecialPurposeField.SPECIAL_PURPOSE_FIELD.DESCRIPTION, value);
  }

  /**
   * Fetch records that have <code>field_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.SpecialPurposeField> fetchRangeOfFieldId(String lowerInclusive, String upperInclusive) {
    return fetchRange(SpecialPurposeField.SPECIAL_PURPOSE_FIELD.FIELD_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>field_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.SpecialPurposeField> fetchByFieldId(String... values) {
    return fetch(SpecialPurposeField.SPECIAL_PURPOSE_FIELD.FIELD_ID, values);
  }

  /**
   * Fetch a unique record that has <code>field_id = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.SpecialPurposeField fetchOneByFieldId(String value) {
    return fetchOne(SpecialPurposeField.SPECIAL_PURPOSE_FIELD.FIELD_ID, value);
  }
}
