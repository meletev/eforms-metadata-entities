/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.records;


import eu.europa.ec.mdd.generated.enums.AllFieldsFullXpathsType;
import eu.europa.ec.mdd.generated.tables.AllFieldsFullXpaths;
import eu.europa.ec.mdd.generated.tables.interfaces.IAllFieldsFullXpaths;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllFieldsFullXpathsRecord extends TableRecordImpl<AllFieldsFullXpathsRecord> implements Record6<String, String, String, String, AllFieldsFullXpathsType, String>, IAllFieldsFullXpaths {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>all_fields_full_xpaths.id</code>.
   */
  @Override
  public void setId(String value) {
    set(0, value);
  }

  /**
   * Getter for <code>all_fields_full_xpaths.id</code>.
   */
  @Override
  public String getId() {
    return (String) get(0);
  }

  /**
   * Setter for <code>all_fields_full_xpaths.business_term_id</code>.
   */
  @Override
  public void setBusinessTermId(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>all_fields_full_xpaths.business_term_id</code>.
   */
  @Override
  public String getBusinessTermId() {
    return (String) get(1);
  }

  /**
   * Setter for <code>all_fields_full_xpaths.description</code>.
   */
  @Override
  public void setDescription(String value) {
    set(2, value);
  }

  /**
   * Getter for <code>all_fields_full_xpaths.description</code>.
   */
  @Override
  public String getDescription() {
    return (String) get(2);
  }

  /**
   * Setter for <code>all_fields_full_xpaths.relative_path</code>.
   */
  @Override
  public void setRelativePath(String value) {
    set(3, value);
  }

  /**
   * Getter for <code>all_fields_full_xpaths.relative_path</code>.
   */
  @Override
  public String getRelativePath() {
    return (String) get(3);
  }

  /**
   * Setter for <code>all_fields_full_xpaths.type</code>.
   */
  @Override
  public void setType(AllFieldsFullXpathsType value) {
    set(4, value);
  }

  /**
   * Getter for <code>all_fields_full_xpaths.type</code>.
   */
  @Override
  public AllFieldsFullXpathsType getType() {
    return (AllFieldsFullXpathsType) get(4);
  }

  /**
   * Setter for <code>all_fields_full_xpaths.absolute_path</code>.
   */
  @Override
  public void setAbsolutePath(String value) {
    set(5, value);
  }

  /**
   * Getter for <code>all_fields_full_xpaths.absolute_path</code>.
   */
  @Override
  public String getAbsolutePath() {
    return (String) get(5);
  }

  // -------------------------------------------------------------------------
  // Record6 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row6<String, String, String, String, AllFieldsFullXpathsType, String> fieldsRow() {
    return (Row6) super.fieldsRow();
  }

  @Override
  public Row6<String, String, String, String, AllFieldsFullXpathsType, String> valuesRow() {
    return (Row6) super.valuesRow();
  }

  @Override
  public Field<String> field1() {
    return AllFieldsFullXpaths.ALL_FIELDS_FULL_XPATHS.ID;
  }

  @Override
  public Field<String> field2() {
    return AllFieldsFullXpaths.ALL_FIELDS_FULL_XPATHS.BUSINESS_TERM_ID;
  }

  @Override
  public Field<String> field3() {
    return AllFieldsFullXpaths.ALL_FIELDS_FULL_XPATHS.DESCRIPTION;
  }

  @Override
  public Field<String> field4() {
    return AllFieldsFullXpaths.ALL_FIELDS_FULL_XPATHS.RELATIVE_PATH;
  }

  @Override
  public Field<AllFieldsFullXpathsType> field5() {
    return AllFieldsFullXpaths.ALL_FIELDS_FULL_XPATHS.TYPE;
  }

  @Override
  public Field<String> field6() {
    return AllFieldsFullXpaths.ALL_FIELDS_FULL_XPATHS.ABSOLUTE_PATH;
  }

  @Override
  public String component1() {
    return getId();
  }

  @Override
  public String component2() {
    return getBusinessTermId();
  }

  @Override
  public String component3() {
    return getDescription();
  }

  @Override
  public String component4() {
    return getRelativePath();
  }

  @Override
  public AllFieldsFullXpathsType component5() {
    return getType();
  }

  @Override
  public String component6() {
    return getAbsolutePath();
  }

  @Override
  public String value1() {
    return getId();
  }

  @Override
  public String value2() {
    return getBusinessTermId();
  }

  @Override
  public String value3() {
    return getDescription();
  }

  @Override
  public String value4() {
    return getRelativePath();
  }

  @Override
  public AllFieldsFullXpathsType value5() {
    return getType();
  }

  @Override
  public String value6() {
    return getAbsolutePath();
  }

  @Override
  public AllFieldsFullXpathsRecord value1(String value) {
    setId(value);
    return this;
  }

  @Override
  public AllFieldsFullXpathsRecord value2(String value) {
    setBusinessTermId(value);
    return this;
  }

  @Override
  public AllFieldsFullXpathsRecord value3(String value) {
    setDescription(value);
    return this;
  }

  @Override
  public AllFieldsFullXpathsRecord value4(String value) {
    setRelativePath(value);
    return this;
  }

  @Override
  public AllFieldsFullXpathsRecord value5(AllFieldsFullXpathsType value) {
    setType(value);
    return this;
  }

  @Override
  public AllFieldsFullXpathsRecord value6(String value) {
    setAbsolutePath(value);
    return this;
  }

  @Override
  public AllFieldsFullXpathsRecord values(String value1, String value2, String value3, String value4, AllFieldsFullXpathsType value5, String value6) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    return this;
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(IAllFieldsFullXpaths from) {
    setId(from.getId());
    setBusinessTermId(from.getBusinessTermId());
    setDescription(from.getDescription());
    setRelativePath(from.getRelativePath());
    setType(from.getType());
    setAbsolutePath(from.getAbsolutePath());
  }

  @Override
  public <E extends IAllFieldsFullXpaths> E into(E into) {
    into.from(this);
    return into;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached AllFieldsFullXpathsRecord
   */
  public AllFieldsFullXpathsRecord() {
    super(AllFieldsFullXpaths.ALL_FIELDS_FULL_XPATHS);
  }

  /**
   * Create a detached, initialised AllFieldsFullXpathsRecord
   */
  public AllFieldsFullXpathsRecord(String id, String businessTermId, String description, String relativePath, AllFieldsFullXpathsType type, String absolutePath) {
    super(AllFieldsFullXpaths.ALL_FIELDS_FULL_XPATHS);

    setId(id);
    setBusinessTermId(businessTermId);
    setDescription(description);
    setRelativePath(relativePath);
    setType(type);
    setAbsolutePath(absolutePath);
  }
}
