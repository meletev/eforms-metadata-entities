/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.enums.CodeListType;
import eu.europa.ec.mdd.generated.tables.CodeList;
import eu.europa.ec.mdd.generated.tables.records.CodeListRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class CodeListDao extends DAOImpl<CodeListRecord, eu.europa.ec.mdd.generated.tables.pojos.CodeList, String> {

  /**
   * Create a new CodeListDao without any configuration
   */
  public CodeListDao() {
    super(CodeList.CODE_LIST, eu.europa.ec.mdd.generated.tables.pojos.CodeList.class);
  }

  /**
   * Create a new CodeListDao with an attached configuration
   */
  @Autowired
  public CodeListDao(Configuration configuration) {
    super(CodeList.CODE_LIST, eu.europa.ec.mdd.generated.tables.pojos.CodeList.class, configuration);
  }

  @Override
  public String getId(eu.europa.ec.mdd.generated.tables.pojos.CodeList object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
    return fetchRange(CodeList.CODE_LIST.ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchById(String... values) {
    return fetch(CodeList.CODE_LIST.ID, values);
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.CodeList fetchOneById(String value) {
    return fetchOne(CodeList.CODE_LIST.ID, value);
  }

  /**
   * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
    return fetchRange(CodeList.CODE_LIST.DESCRIPTION, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>description IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchByDescription(String... values) {
    return fetch(CodeList.CODE_LIST.DESCRIPTION, values);
  }

  /**
   * Fetch records that have <code>official BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchRangeOfOfficial(Boolean lowerInclusive, Boolean upperInclusive) {
    return fetchRange(CodeList.CODE_LIST.OFFICIAL, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>official IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchByOfficial(Boolean... values) {
    return fetch(CodeList.CODE_LIST.OFFICIAL, values);
  }

  /**
   * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchRangeOfType(CodeListType lowerInclusive, CodeListType upperInclusive) {
    return fetchRange(CodeList.CODE_LIST.TYPE, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>type IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchByType(CodeListType... values) {
    return fetch(CodeList.CODE_LIST.TYPE, values);
  }

  /**
   * Fetch records that have <code>parent_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchRangeOfParentId(String lowerInclusive, String upperInclusive) {
    return fetchRange(CodeList.CODE_LIST.PARENT_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>parent_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchByParentId(String... values) {
    return fetch(CodeList.CODE_LIST.PARENT_ID, values);
  }

  /**
   * Fetch records that have <code>source_canonical_uri BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchRangeOfSourceCanonicalUri(String lowerInclusive, String upperInclusive) {
    return fetchRange(CodeList.CODE_LIST.SOURCE_CANONICAL_URI, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>source_canonical_uri IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchBySourceCanonicalUri(String... values) {
    return fetch(CodeList.CODE_LIST.SOURCE_CANONICAL_URI, values);
  }

  /**
   * Fetch records that have <code>source_version BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchRangeOfSourceVersion(String lowerInclusive, String upperInclusive) {
    return fetchRange(CodeList.CODE_LIST.SOURCE_VERSION, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>source_version IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchBySourceVersion(String... values) {
    return fetch(CodeList.CODE_LIST.SOURCE_VERSION, values);
  }

  /**
   * Fetch records that have <code>source_short_name BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchRangeOfSourceShortName(String lowerInclusive, String upperInclusive) {
    return fetchRange(CodeList.CODE_LIST.SOURCE_SHORT_NAME, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>source_short_name IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchBySourceShortName(String... values) {
    return fetch(CodeList.CODE_LIST.SOURCE_SHORT_NAME, values);
  }

  /**
   * Fetch records that have <code>source_long_name BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchRangeOfSourceLongName(String lowerInclusive, String upperInclusive) {
    return fetchRange(CodeList.CODE_LIST.SOURCE_LONG_NAME, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>source_long_name IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchBySourceLongName(String... values) {
    return fetch(CodeList.CODE_LIST.SOURCE_LONG_NAME, values);
  }

  /**
   * Fetch records that have <code>source_long_name_list_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchRangeOfSourceLongNameListId(String lowerInclusive, String upperInclusive) {
    return fetchRange(CodeList.CODE_LIST.SOURCE_LONG_NAME_LIST_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>source_long_name_list_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchBySourceLongNameListId(String... values) {
    return fetch(CodeList.CODE_LIST.SOURCE_LONG_NAME_LIST_ID, values);
  }

  /**
   * Fetch records that have <code>created BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchRangeOfCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
    return fetchRange(CodeList.CODE_LIST.CREATED, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>created IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchByCreated(LocalDateTime... values) {
    return fetch(CodeList.CODE_LIST.CREATED, values);
  }

  /**
   * Fetch records that have <code>imported BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchRangeOfImported(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
    return fetchRange(CodeList.CODE_LIST.IMPORTED, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>imported IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.CodeList> fetchByImported(LocalDateTime... values) {
    return fetch(CodeList.CODE_LIST.IMPORTED, values);
  }
}
