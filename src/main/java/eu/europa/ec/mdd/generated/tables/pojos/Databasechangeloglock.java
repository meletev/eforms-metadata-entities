/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.pojos;


import eu.europa.ec.mdd.generated.tables.interfaces.IDatabasechangeloglock;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Databasechangeloglock implements IDatabasechangeloglock {

  private static final long serialVersionUID = 1L;

  private Integer       id;
  private Boolean       locked;
  private LocalDateTime lockgranted;
  private String        lockedby;

  public Databasechangeloglock() {}

  public Databasechangeloglock(IDatabasechangeloglock value) {
    this.id = value.getId();
    this.locked = value.getLocked();
    this.lockgranted = value.getLockgranted();
    this.lockedby = value.getLockedby();
  }

  public Databasechangeloglock(
    Integer       id,
    Boolean       locked,
    LocalDateTime lockgranted,
    String        lockedby
  ) {
    this.id = id;
    this.locked = locked;
    this.lockgranted = lockgranted;
    this.lockedby = lockedby;
  }

  /**
   * Getter for <code>DATABASECHANGELOGLOCK.ID</code>.
   */
  @Override
  public Integer getId() {
    return this.id;
  }

  /**
   * Setter for <code>DATABASECHANGELOGLOCK.ID</code>.
   */
  @Override
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   * Getter for <code>DATABASECHANGELOGLOCK.LOCKED</code>.
   */
  @Override
  public Boolean getLocked() {
    return this.locked;
  }

  /**
   * Setter for <code>DATABASECHANGELOGLOCK.LOCKED</code>.
   */
  @Override
  public void setLocked(Boolean locked) {
    this.locked = locked;
  }

  /**
   * Getter for <code>DATABASECHANGELOGLOCK.LOCKGRANTED</code>.
   */
  @Override
  public LocalDateTime getLockgranted() {
    return this.lockgranted;
  }

  /**
   * Setter for <code>DATABASECHANGELOGLOCK.LOCKGRANTED</code>.
   */
  @Override
  public void setLockgranted(LocalDateTime lockgranted) {
    this.lockgranted = lockgranted;
  }

  /**
   * Getter for <code>DATABASECHANGELOGLOCK.LOCKEDBY</code>.
   */
  @Override
  public String getLockedby() {
    return this.lockedby;
  }

  /**
   * Setter for <code>DATABASECHANGELOGLOCK.LOCKEDBY</code>.
   */
  @Override
  public void setLockedby(String lockedby) {
    this.lockedby = lockedby;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Databasechangeloglock (");

    sb.append(id);
    sb.append(", ").append(locked);
    sb.append(", ").append(lockgranted);
    sb.append(", ").append(lockedby);

    sb.append(")");
    return sb.toString();
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(IDatabasechangeloglock from) {
    setId(from.getId());
    setLocked(from.getLocked());
    setLockgranted(from.getLockgranted());
    setLockedby(from.getLockedby());
  }

  @Override
  public <E extends IDatabasechangeloglock> E into(E into) {
    into.from(this);
    return into;
  }
}
