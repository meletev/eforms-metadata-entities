/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.enums.LabelAssetType;
import eu.europa.ec.mdd.generated.enums.LabelLabelType;
import eu.europa.ec.mdd.generated.tables.Label;
import eu.europa.ec.mdd.generated.tables.records.LabelRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class LabelDao extends DAOImpl<LabelRecord, eu.europa.ec.mdd.generated.tables.pojos.Label, String> {

  /**
   * Create a new LabelDao without any configuration
   */
  public LabelDao() {
    super(Label.LABEL, eu.europa.ec.mdd.generated.tables.pojos.Label.class);
  }

  /**
   * Create a new LabelDao with an attached configuration
   */
  @Autowired
  public LabelDao(Configuration configuration) {
    super(Label.LABEL, eu.europa.ec.mdd.generated.tables.pojos.Label.class, configuration);
  }

  @Override
  public String getId(eu.europa.ec.mdd.generated.tables.pojos.Label object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchById(String... values) {
    return fetch(Label.LABEL.ID, values);
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.Label fetchOneById(String value) {
    return fetchOne(Label.LABEL.ID, value);
  }

  /**
   * Fetch records that have <code>asset_type BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfAssetType(LabelAssetType lowerInclusive, LabelAssetType upperInclusive) {
    return fetchRange(Label.LABEL.ASSET_TYPE, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>asset_type IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByAssetType(LabelAssetType... values) {
    return fetch(Label.LABEL.ASSET_TYPE, values);
  }

  /**
   * Fetch records that have <code>label_type BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfLabelType(LabelLabelType lowerInclusive, LabelLabelType upperInclusive) {
    return fetchRange(Label.LABEL.LABEL_TYPE, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>label_type IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByLabelType(LabelLabelType... values) {
    return fetch(Label.LABEL.LABEL_TYPE, values);
  }

  /**
   * Fetch records that have <code>asset_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfAssetId(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.ASSET_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>asset_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByAssetId(String... values) {
    return fetch(Label.LABEL.ASSET_ID, values);
  }

  /**
   * Fetch records that have <code>old_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfOldId(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.OLD_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>old_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByOldId(String... values) {
    return fetch(Label.LABEL.OLD_ID, values);
  }

  /**
   * Fetch records that have <code>comment BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfComment(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.COMMENT, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>comment IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByComment(String... values) {
    return fetch(Label.LABEL.COMMENT, values);
  }

  /**
   * Fetch records that have <code>generated BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfGenerated(Boolean lowerInclusive, Boolean upperInclusive) {
    return fetchRange(Label.LABEL.GENERATED, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>generated IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByGenerated(Boolean... values) {
    return fetch(Label.LABEL.GENERATED, values);
  }

  /**
   * Fetch records that have <code>en BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfEn(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.EN, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>en IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByEn(String... values) {
    return fetch(Label.LABEL.EN, values);
  }

  /**
   * Fetch records that have <code>fr BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfFr(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.FR, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>fr IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByFr(String... values) {
    return fetch(Label.LABEL.FR, values);
  }

  /**
   * Fetch records that have <code>de BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfDe(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.DE, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>de IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByDe(String... values) {
    return fetch(Label.LABEL.DE, values);
  }

  /**
   * Fetch records that have <code>bg BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfBg(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.BG, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>bg IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByBg(String... values) {
    return fetch(Label.LABEL.BG, values);
  }

  /**
   * Fetch records that have <code>cs BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfCs(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.CS, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>cs IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByCs(String... values) {
    return fetch(Label.LABEL.CS, values);
  }

  /**
   * Fetch records that have <code>da BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfDa(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.DA, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>da IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByDa(String... values) {
    return fetch(Label.LABEL.DA, values);
  }

  /**
   * Fetch records that have <code>el BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfEl(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.EL, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>el IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByEl(String... values) {
    return fetch(Label.LABEL.EL, values);
  }

  /**
   * Fetch records that have <code>es BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfEs(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.ES, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>es IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByEs(String... values) {
    return fetch(Label.LABEL.ES, values);
  }

  /**
   * Fetch records that have <code>et BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfEt(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.ET, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>et IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByEt(String... values) {
    return fetch(Label.LABEL.ET, values);
  }

  /**
   * Fetch records that have <code>fi BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfFi(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.FI, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>fi IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByFi(String... values) {
    return fetch(Label.LABEL.FI, values);
  }

  /**
   * Fetch records that have <code>ga BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfGa(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.GA, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>ga IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByGa(String... values) {
    return fetch(Label.LABEL.GA, values);
  }

  /**
   * Fetch records that have <code>hr BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfHr(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.HR, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>hr IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByHr(String... values) {
    return fetch(Label.LABEL.HR, values);
  }

  /**
   * Fetch records that have <code>hu BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfHu(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.HU, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>hu IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByHu(String... values) {
    return fetch(Label.LABEL.HU, values);
  }

  /**
   * Fetch records that have <code>it BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfIt(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.IT, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>it IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByIt(String... values) {
    return fetch(Label.LABEL.IT, values);
  }

  /**
   * Fetch records that have <code>lt BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfLt(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.LT, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>lt IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByLt(String... values) {
    return fetch(Label.LABEL.LT, values);
  }

  /**
   * Fetch records that have <code>lv BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfLv(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.LV, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>lv IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByLv(String... values) {
    return fetch(Label.LABEL.LV, values);
  }

  /**
   * Fetch records that have <code>mt BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfMt(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.MT, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>mt IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByMt(String... values) {
    return fetch(Label.LABEL.MT, values);
  }

  /**
   * Fetch records that have <code>nl BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfNl(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.NL, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>nl IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByNl(String... values) {
    return fetch(Label.LABEL.NL, values);
  }

  /**
   * Fetch records that have <code>pl BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfPl(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.PL, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>pl IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByPl(String... values) {
    return fetch(Label.LABEL.PL, values);
  }

  /**
   * Fetch records that have <code>pt BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfPt(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.PT, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>pt IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByPt(String... values) {
    return fetch(Label.LABEL.PT, values);
  }

  /**
   * Fetch records that have <code>ro BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfRo(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.RO, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>ro IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchByRo(String... values) {
    return fetch(Label.LABEL.RO, values);
  }

  /**
   * Fetch records that have <code>sk BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfSk(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.SK, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>sk IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchBySk(String... values) {
    return fetch(Label.LABEL.SK, values);
  }

  /**
   * Fetch records that have <code>sl BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfSl(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.SL, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>sl IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchBySl(String... values) {
    return fetch(Label.LABEL.SL, values);
  }

  /**
   * Fetch records that have <code>sv BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchRangeOfSv(String lowerInclusive, String upperInclusive) {
    return fetchRange(Label.LABEL.SV, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>sv IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Label> fetchBySv(String... values) {
    return fetch(Label.LABEL.SV, values);
  }
}
