/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.pojos;


import eu.europa.ec.mdd.generated.enums.BusinessRuleContext;
import eu.europa.ec.mdd.generated.enums.BusinessRuleSeverity;
import eu.europa.ec.mdd.generated.enums.BusinessRuleTarget;
import eu.europa.ec.mdd.generated.enums.BusinessRuleType;
import eu.europa.ec.mdd.generated.tables.interfaces.IBusinessRule;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusinessRule implements IBusinessRule {

  private static final long serialVersionUID = 1L;

  private String               id;
  private BusinessRuleType     type;
  private String               fieldId;
  private String               patternId;
  private String               intervalId;
  private String               noticeId;
  private Integer              conditionId;
  private Integer              expressionId;
  private String               codeListId;
  private String               codeListParent;
  private Boolean              canModify;
  private Boolean              canAdd;
  private Boolean              canRemove;
  private BusinessRuleContext  context;
  private String               contextNode;
  private String               description;
  private BusinessRuleSeverity severity;
  private Integer              stage;
  private BusinessRuleTarget   target;
  private Boolean              draft;
  private String               draftReason;

  public BusinessRule() {}

  public BusinessRule(IBusinessRule value) {
    this.id = value.getId();
    this.type = value.getType();
    this.fieldId = value.getFieldId();
    this.patternId = value.getPatternId();
    this.intervalId = value.getIntervalId();
    this.noticeId = value.getNoticeId();
    this.conditionId = value.getConditionId();
    this.expressionId = value.getExpressionId();
    this.codeListId = value.getCodeListId();
    this.codeListParent = value.getCodeListParent();
    this.canModify = value.getCanModify();
    this.canAdd = value.getCanAdd();
    this.canRemove = value.getCanRemove();
    this.context = value.getContext();
    this.contextNode = value.getContextNode();
    this.description = value.getDescription();
    this.severity = value.getSeverity();
    this.stage = value.getStage();
    this.target = value.getTarget();
    this.draft = value.getDraft();
    this.draftReason = value.getDraftReason();
  }

  public BusinessRule(
    String               id,
    BusinessRuleType     type,
    String               fieldId,
    String               patternId,
    String               intervalId,
    String               noticeId,
    Integer              conditionId,
    Integer              expressionId,
    String               codeListId,
    String               codeListParent,
    Boolean              canModify,
    Boolean              canAdd,
    Boolean              canRemove,
    BusinessRuleContext  context,
    String               contextNode,
    String               description,
    BusinessRuleSeverity severity,
    Integer              stage,
    BusinessRuleTarget   target,
    Boolean              draft,
    String               draftReason
  ) {
    this.id = id;
    this.type = type;
    this.fieldId = fieldId;
    this.patternId = patternId;
    this.intervalId = intervalId;
    this.noticeId = noticeId;
    this.conditionId = conditionId;
    this.expressionId = expressionId;
    this.codeListId = codeListId;
    this.codeListParent = codeListParent;
    this.canModify = canModify;
    this.canAdd = canAdd;
    this.canRemove = canRemove;
    this.context = context;
    this.contextNode = contextNode;
    this.description = description;
    this.severity = severity;
    this.stage = stage;
    this.target = target;
    this.draft = draft;
    this.draftReason = draftReason;
  }

  /**
   * Getter for <code>business_rule.id</code>.
   */
  @Override
  public String getId() {
    return this.id;
  }

  /**
   * Setter for <code>business_rule.id</code>.
   */
  @Override
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Getter for <code>business_rule.type</code>.
   */
  @Override
  public BusinessRuleType getType() {
    return this.type;
  }

  /**
   * Setter for <code>business_rule.type</code>.
   */
  @Override
  public void setType(BusinessRuleType type) {
    this.type = type;
  }

  /**
   * Getter for <code>business_rule.field_id</code>.
   */
  @Override
  public String getFieldId() {
    return this.fieldId;
  }

  /**
   * Setter for <code>business_rule.field_id</code>.
   */
  @Override
  public void setFieldId(String fieldId) {
    this.fieldId = fieldId;
  }

  /**
   * Getter for <code>business_rule.pattern_id</code>.
   */
  @Override
  public String getPatternId() {
    return this.patternId;
  }

  /**
   * Setter for <code>business_rule.pattern_id</code>.
   */
  @Override
  public void setPatternId(String patternId) {
    this.patternId = patternId;
  }

  /**
   * Getter for <code>business_rule.interval_id</code>.
   */
  @Override
  public String getIntervalId() {
    return this.intervalId;
  }

  /**
   * Setter for <code>business_rule.interval_id</code>.
   */
  @Override
  public void setIntervalId(String intervalId) {
    this.intervalId = intervalId;
  }

  /**
   * Getter for <code>business_rule.notice_id</code>. null means all notices
   */
  @Override
  public String getNoticeId() {
    return this.noticeId;
  }

  /**
   * Setter for <code>business_rule.notice_id</code>. null means all notices
   */
  @Override
  public void setNoticeId(String noticeId) {
    this.noticeId = noticeId;
  }

  /**
   * Getter for <code>business_rule.condition_id</code>.
   */
  @Override
  public Integer getConditionId() {
    return this.conditionId;
  }

  /**
   * Setter for <code>business_rule.condition_id</code>.
   */
  @Override
  public void setConditionId(Integer conditionId) {
    this.conditionId = conditionId;
  }

  /**
   * Getter for <code>business_rule.expression_id</code>.
   */
  @Override
  public Integer getExpressionId() {
    return this.expressionId;
  }

  /**
   * Setter for <code>business_rule.expression_id</code>.
   */
  @Override
  public void setExpressionId(Integer expressionId) {
    this.expressionId = expressionId;
  }

  /**
   * Getter for <code>business_rule.code_list_id</code>.
   */
  @Override
  public String getCodeListId() {
    return this.codeListId;
  }

  /**
   * Setter for <code>business_rule.code_list_id</code>.
   */
  @Override
  public void setCodeListId(String codeListId) {
    this.codeListId = codeListId;
  }

  /**
   * Getter for <code>business_rule.code_list_parent</code>.
   */
  @Override
  public String getCodeListParent() {
    return this.codeListParent;
  }

  /**
   * Setter for <code>business_rule.code_list_parent</code>.
   */
  @Override
  public void setCodeListParent(String codeListParent) {
    this.codeListParent = codeListParent;
  }

  /**
   * Getter for <code>business_rule.can_modify</code>. null means applies to first repeatable parent (expects one)
   */
  @Override
  public Boolean getCanModify() {
    return this.canModify;
  }

  /**
   * Setter for <code>business_rule.can_modify</code>. null means applies to first repeatable parent (expects one)
   */
  @Override
  public void setCanModify(Boolean canModify) {
    this.canModify = canModify;
  }

  /**
   * Getter for <code>business_rule.can_add</code>. Change notice related
   */
  @Override
  public Boolean getCanAdd() {
    return this.canAdd;
  }

  /**
   * Setter for <code>business_rule.can_add</code>. Change notice related
   */
  @Override
  public void setCanAdd(Boolean canAdd) {
    this.canAdd = canAdd;
  }

  /**
   * Getter for <code>business_rule.can_remove</code>. Change notice related
   */
  @Override
  public Boolean getCanRemove() {
    return this.canRemove;
  }

  /**
   * Setter for <code>business_rule.can_remove</code>. Change notice related
   */
  @Override
  public void setCanRemove(Boolean canRemove) {
    this.canRemove = canRemove;
  }

  /**
   * Getter for <code>business_rule.context</code>.
   */
  @Override
  public BusinessRuleContext getContext() {
    return this.context;
  }

  /**
   * Setter for <code>business_rule.context</code>.
   */
  @Override
  public void setContext(BusinessRuleContext context) {
    this.context = context;
  }

  /**
   * Getter for <code>business_rule.context_node</code>.
   */
  @Override
  public String getContextNode() {
    return this.contextNode;
  }

  /**
   * Setter for <code>business_rule.context_node</code>.
   */
  @Override
  public void setContextNode(String contextNode) {
    this.contextNode = contextNode;
  }

  /**
   * Getter for <code>business_rule.description</code>.
   */
  @Override
  public String getDescription() {
    return this.description;
  }

  /**
   * Setter for <code>business_rule.description</code>.
   */
  @Override
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Getter for <code>business_rule.severity</code>.
   */
  @Override
  public BusinessRuleSeverity getSeverity() {
    return this.severity;
  }

  /**
   * Setter for <code>business_rule.severity</code>.
   */
  @Override
  public void setSeverity(BusinessRuleSeverity severity) {
    this.severity = severity;
  }

  /**
   * Getter for <code>business_rule.stage</code>.
   */
  @Override
  public Integer getStage() {
    return this.stage;
  }

  /**
   * Setter for <code>business_rule.stage</code>.
   */
  @Override
  public void setStage(Integer stage) {
    this.stage = stage;
  }

  /**
   * Getter for <code>business_rule.target</code>. The situation in which the rule should be applied
   */
  @Override
  public BusinessRuleTarget getTarget() {
    return this.target;
  }

  /**
   * Setter for <code>business_rule.target</code>. The situation in which the rule should be applied
   */
  @Override
  public void setTarget(BusinessRuleTarget target) {
    this.target = target;
  }

  /**
   * Getter for <code>business_rule.draft</code>. Drafts are excluded from the export
   */
  @Override
  public Boolean getDraft() {
    return this.draft;
  }

  /**
   * Setter for <code>business_rule.draft</code>. Drafts are excluded from the export
   */
  @Override
  public void setDraft(Boolean draft) {
    this.draft = draft;
  }

  /**
   * Getter for <code>business_rule.draft_reason</code>.
   */
  @Override
  public String getDraftReason() {
    return this.draftReason;
  }

  /**
   * Setter for <code>business_rule.draft_reason</code>.
   */
  @Override
  public void setDraftReason(String draftReason) {
    this.draftReason = draftReason;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BusinessRule (");

    sb.append(id);
    sb.append(", ").append(type);
    sb.append(", ").append(fieldId);
    sb.append(", ").append(patternId);
    sb.append(", ").append(intervalId);
    sb.append(", ").append(noticeId);
    sb.append(", ").append(conditionId);
    sb.append(", ").append(expressionId);
    sb.append(", ").append(codeListId);
    sb.append(", ").append(codeListParent);
    sb.append(", ").append(canModify);
    sb.append(", ").append(canAdd);
    sb.append(", ").append(canRemove);
    sb.append(", ").append(context);
    sb.append(", ").append(contextNode);
    sb.append(", ").append(description);
    sb.append(", ").append(severity);
    sb.append(", ").append(stage);
    sb.append(", ").append(target);
    sb.append(", ").append(draft);
    sb.append(", ").append(draftReason);

    sb.append(")");
    return sb.toString();
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(IBusinessRule from) {
    setId(from.getId());
    setType(from.getType());
    setFieldId(from.getFieldId());
    setPatternId(from.getPatternId());
    setIntervalId(from.getIntervalId());
    setNoticeId(from.getNoticeId());
    setConditionId(from.getConditionId());
    setExpressionId(from.getExpressionId());
    setCodeListId(from.getCodeListId());
    setCodeListParent(from.getCodeListParent());
    setCanModify(from.getCanModify());
    setCanAdd(from.getCanAdd());
    setCanRemove(from.getCanRemove());
    setContext(from.getContext());
    setContextNode(from.getContextNode());
    setDescription(from.getDescription());
    setSeverity(from.getSeverity());
    setStage(from.getStage());
    setTarget(from.getTarget());
    setDraft(from.getDraft());
    setDraftReason(from.getDraftReason());
  }

  @Override
  public <E extends IBusinessRule> E into(E into) {
    into.from(this);
    return into;
  }
}
