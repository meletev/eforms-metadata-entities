/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.tables.Condition;
import eu.europa.ec.mdd.generated.tables.records.ConditionRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ConditionDao extends DAOImpl<ConditionRecord, eu.europa.ec.mdd.generated.tables.pojos.Condition, Integer> {

  /**
   * Create a new ConditionDao without any configuration
   */
  public ConditionDao() {
    super(Condition.CONDITION, eu.europa.ec.mdd.generated.tables.pojos.Condition.class);
  }

  /**
   * Create a new ConditionDao with an attached configuration
   */
  @Autowired
  public ConditionDao(Configuration configuration) {
    super(Condition.CONDITION, eu.europa.ec.mdd.generated.tables.pojos.Condition.class, configuration);
  }

  @Override
  public Integer getId(eu.europa.ec.mdd.generated.tables.pojos.Condition object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Condition> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
    return fetchRange(Condition.CONDITION.ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Condition> fetchById(Integer... values) {
    return fetch(Condition.CONDITION.ID, values);
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.Condition fetchOneById(Integer value) {
    return fetchOne(Condition.CONDITION.ID, value);
  }

  /**
   * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Condition> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
    return fetchRange(Condition.CONDITION.DESCRIPTION, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>description IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Condition> fetchByDescription(String... values) {
    return fetch(Condition.CONDITION.DESCRIPTION, values);
  }

  /**
   * Fetch records that have <code>expression_efx BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Condition> fetchRangeOfExpressionEfx(String lowerInclusive, String upperInclusive) {
    return fetchRange(Condition.CONDITION.EXPRESSION_EFX, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>expression_efx IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Condition> fetchByExpressionEfx(String... values) {
    return fetch(Condition.CONDITION.EXPRESSION_EFX, values);
  }
}
