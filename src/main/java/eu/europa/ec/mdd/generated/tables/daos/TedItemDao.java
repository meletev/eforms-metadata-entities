/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.tables.TedItem;
import eu.europa.ec.mdd.generated.tables.records.TedItemRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TedItemDao extends DAOImpl<TedItemRecord, eu.europa.ec.mdd.generated.tables.pojos.TedItem, Integer> {

  /**
   * Create a new TedItemDao without any configuration
   */
  public TedItemDao() {
    super(TedItem.TED_ITEM, eu.europa.ec.mdd.generated.tables.pojos.TedItem.class);
  }

  /**
   * Create a new TedItemDao with an attached configuration
   */
  @Autowired
  public TedItemDao(Configuration configuration) {
    super(TedItem.TED_ITEM, eu.europa.ec.mdd.generated.tables.pojos.TedItem.class, configuration);
  }

  @Override
  public Integer getId(eu.europa.ec.mdd.generated.tables.pojos.TedItem object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.TedItem> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
    return fetchRange(TedItem.TED_ITEM.ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.TedItem> fetchById(Integer... values) {
    return fetch(TedItem.TED_ITEM.ID, values);
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.TedItem fetchOneById(Integer value) {
    return fetchOne(TedItem.TED_ITEM.ID, value);
  }

  /**
   * Fetch records that have <code>heading BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.TedItem> fetchRangeOfHeading(String lowerInclusive, String upperInclusive) {
    return fetchRange(TedItem.TED_ITEM.HEADING, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>heading IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.TedItem> fetchByHeading(String... values) {
    return fetch(TedItem.TED_ITEM.HEADING, values);
  }

  /**
   * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.TedItem> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
    return fetchRange(TedItem.TED_ITEM.NAME, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>name IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.TedItem> fetchByName(String... values) {
    return fetch(TedItem.TED_ITEM.NAME, values);
  }

  /**
   * Fetch records that have <code>parent_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.TedItem> fetchRangeOfParentId(Integer lowerInclusive, Integer upperInclusive) {
    return fetchRange(TedItem.TED_ITEM.PARENT_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>parent_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.TedItem> fetchByParentId(Integer... values) {
    return fetch(TedItem.TED_ITEM.PARENT_ID, values);
  }

  /**
   * Fetch records that have <code>form_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.TedItem> fetchRangeOfFormId(String lowerInclusive, String upperInclusive) {
    return fetchRange(TedItem.TED_ITEM.FORM_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>form_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.TedItem> fetchByFormId(String... values) {
    return fetch(TedItem.TED_ITEM.FORM_ID, values);
  }

  /**
   * Fetch records that have <code>xpath BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.TedItem> fetchRangeOfXpath(String lowerInclusive, String upperInclusive) {
    return fetchRange(TedItem.TED_ITEM.XPATH, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>xpath IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.TedItem> fetchByXpath(String... values) {
    return fetch(TedItem.TED_ITEM.XPATH, values);
  }
}
