/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.records;


import eu.europa.ec.mdd.generated.tables.BusinessTerm;
import eu.europa.ec.mdd.generated.tables.interfaces.IBusinessTerm;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusinessTermRecord extends UpdatableRecordImpl<BusinessTermRecord> implements Record4<String, String, String, String>, IBusinessTerm {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>business_term.id</code>.
   */
  @Override
  public void setId(String value) {
    set(0, value);
  }

  /**
   * Getter for <code>business_term.id</code>.
   */
  @Override
  public String getId() {
    return (String) get(0);
  }

  /**
   * Setter for <code>business_term.business_group_id</code>.
   */
  @Override
  public void setBusinessGroupId(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>business_term.business_group_id</code>.
   */
  @Override
  public String getBusinessGroupId() {
    return (String) get(1);
  }

  /**
   * Setter for <code>business_term.type</code>.
   */
  @Override
  public void setType(String value) {
    set(2, value);
  }

  /**
   * Getter for <code>business_term.type</code>.
   */
  @Override
  public String getType() {
    return (String) get(2);
  }

  /**
   * Setter for <code>business_term.description</code>.
   */
  @Override
  public void setDescription(String value) {
    set(3, value);
  }

  /**
   * Getter for <code>business_term.description</code>.
   */
  @Override
  public String getDescription() {
    return (String) get(3);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<String> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record4 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row4<String, String, String, String> fieldsRow() {
    return (Row4) super.fieldsRow();
  }

  @Override
  public Row4<String, String, String, String> valuesRow() {
    return (Row4) super.valuesRow();
  }

  @Override
  public Field<String> field1() {
    return BusinessTerm.BUSINESS_TERM.ID;
  }

  @Override
  public Field<String> field2() {
    return BusinessTerm.BUSINESS_TERM.BUSINESS_GROUP_ID;
  }

  @Override
  public Field<String> field3() {
    return BusinessTerm.BUSINESS_TERM.TYPE;
  }

  @Override
  public Field<String> field4() {
    return BusinessTerm.BUSINESS_TERM.DESCRIPTION;
  }

  @Override
  public String component1() {
    return getId();
  }

  @Override
  public String component2() {
    return getBusinessGroupId();
  }

  @Override
  public String component3() {
    return getType();
  }

  @Override
  public String component4() {
    return getDescription();
  }

  @Override
  public String value1() {
    return getId();
  }

  @Override
  public String value2() {
    return getBusinessGroupId();
  }

  @Override
  public String value3() {
    return getType();
  }

  @Override
  public String value4() {
    return getDescription();
  }

  @Override
  public BusinessTermRecord value1(String value) {
    setId(value);
    return this;
  }

  @Override
  public BusinessTermRecord value2(String value) {
    setBusinessGroupId(value);
    return this;
  }

  @Override
  public BusinessTermRecord value3(String value) {
    setType(value);
    return this;
  }

  @Override
  public BusinessTermRecord value4(String value) {
    setDescription(value);
    return this;
  }

  @Override
  public BusinessTermRecord values(String value1, String value2, String value3, String value4) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    return this;
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(IBusinessTerm from) {
    setId(from.getId());
    setBusinessGroupId(from.getBusinessGroupId());
    setType(from.getType());
    setDescription(from.getDescription());
  }

  @Override
  public <E extends IBusinessTerm> E into(E into) {
    into.from(this);
    return into;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached BusinessTermRecord
   */
  public BusinessTermRecord() {
    super(BusinessTerm.BUSINESS_TERM);
  }

  /**
   * Create a detached, initialised BusinessTermRecord
   */
  public BusinessTermRecord(String id, String businessGroupId, String type, String description) {
    super(BusinessTerm.BUSINESS_TERM);

    setId(id);
    setBusinessGroupId(businessGroupId);
    setType(type);
    setDescription(description);
  }
}
