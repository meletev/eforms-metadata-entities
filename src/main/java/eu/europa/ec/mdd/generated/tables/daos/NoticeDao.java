/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.enums.NoticeFormType;
import eu.europa.ec.mdd.generated.enums.NoticeLegalBasis;
import eu.europa.ec.mdd.generated.enums.NoticeNoticeType;
import eu.europa.ec.mdd.generated.tables.Notice;
import eu.europa.ec.mdd.generated.tables.records.NoticeRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class NoticeDao extends DAOImpl<NoticeRecord, eu.europa.ec.mdd.generated.tables.pojos.Notice, String> {

  /**
   * Create a new NoticeDao without any configuration
   */
  public NoticeDao() {
    super(Notice.NOTICE, eu.europa.ec.mdd.generated.tables.pojos.Notice.class);
  }

  /**
   * Create a new NoticeDao with an attached configuration
   */
  @Autowired
  public NoticeDao(Configuration configuration) {
    super(Notice.NOTICE, eu.europa.ec.mdd.generated.tables.pojos.Notice.class, configuration);
  }

  @Override
  public String getId(eu.europa.ec.mdd.generated.tables.pojos.Notice object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Notice> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
    return fetchRange(Notice.NOTICE.ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Notice> fetchById(String... values) {
    return fetch(Notice.NOTICE.ID, values);
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.Notice fetchOneById(String value) {
    return fetchOne(Notice.NOTICE.ID, value);
  }

  /**
   * Fetch records that have <code>legal_basis BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Notice> fetchRangeOfLegalBasis(NoticeLegalBasis lowerInclusive, NoticeLegalBasis upperInclusive) {
    return fetchRange(Notice.NOTICE.LEGAL_BASIS, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>legal_basis IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Notice> fetchByLegalBasis(NoticeLegalBasis... values) {
    return fetch(Notice.NOTICE.LEGAL_BASIS, values);
  }

  /**
   * Fetch records that have <code>form_type BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Notice> fetchRangeOfFormType(NoticeFormType lowerInclusive, NoticeFormType upperInclusive) {
    return fetchRange(Notice.NOTICE.FORM_TYPE, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>form_type IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Notice> fetchByFormType(NoticeFormType... values) {
    return fetch(Notice.NOTICE.FORM_TYPE, values);
  }

  /**
   * Fetch records that have <code>notice_type BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Notice> fetchRangeOfNoticeType(NoticeNoticeType lowerInclusive, NoticeNoticeType upperInclusive) {
    return fetchRange(Notice.NOTICE.NOTICE_TYPE, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>notice_type IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Notice> fetchByNoticeType(NoticeNoticeType... values) {
    return fetch(Notice.NOTICE.NOTICE_TYPE, values);
  }

  /**
   * Fetch records that have <code>document_type_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Notice> fetchRangeOfDocumentTypeId(String lowerInclusive, String upperInclusive) {
    return fetchRange(Notice.NOTICE.DOCUMENT_TYPE_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>document_type_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Notice> fetchByDocumentTypeId(String... values) {
    return fetch(Notice.NOTICE.DOCUMENT_TYPE_ID, values);
  }

  /**
   * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Notice> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
    return fetchRange(Notice.NOTICE.DESCRIPTION, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>description IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Notice> fetchByDescription(String... values) {
    return fetch(Notice.NOTICE.DESCRIPTION, values);
  }
}
