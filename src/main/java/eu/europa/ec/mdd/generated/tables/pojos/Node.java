/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.pojos;


import eu.europa.ec.mdd.generated.tables.interfaces.INode;


/**
 * Contains XML nodes that contain other nodes or fields. Used to represent 
 * the XML structure except the leaf nodes (  which are the fields).
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Node implements INode {

  private static final long serialVersionUID = 1L;

  private String  id;
  private String  parentId;
  private String  xpathRelative;
  private Boolean repeatable;
  private String  identifierFieldId;
  private String  name;
  private String  description;
  private Boolean dbGenerated;

  public Node() {}

  public Node(INode value) {
    this.id = value.getId();
    this.parentId = value.getParentId();
    this.xpathRelative = value.getXpathRelative();
    this.repeatable = value.getRepeatable();
    this.identifierFieldId = value.getIdentifierFieldId();
    this.name = value.getName();
    this.description = value.getDescription();
    this.dbGenerated = value.getDbGenerated();
  }

  public Node(
    String  id,
    String  parentId,
    String  xpathRelative,
    Boolean repeatable,
    String  identifierFieldId,
    String  name,
    String  description,
    Boolean dbGenerated
  ) {
    this.id = id;
    this.parentId = parentId;
    this.xpathRelative = xpathRelative;
    this.repeatable = repeatable;
    this.identifierFieldId = identifierFieldId;
    this.name = name;
    this.description = description;
    this.dbGenerated = dbGenerated;
  }

  /**
   * Getter for <code>node.id</code>.
   */
  @Override
  public String getId() {
    return this.id;
  }

  /**
   * Setter for <code>node.id</code>.
   */
  @Override
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Getter for <code>node.parent_id</code>.
   */
  @Override
  public String getParentId() {
    return this.parentId;
  }

  /**
   * Setter for <code>node.parent_id</code>.
   */
  @Override
  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  /**
   * Getter for <code>node.xpath_relative</code>.
   */
  @Override
  public String getXpathRelative() {
    return this.xpathRelative;
  }

  /**
   * Setter for <code>node.xpath_relative</code>.
   */
  @Override
  public void setXpathRelative(String xpathRelative) {
    this.xpathRelative = xpathRelative;
  }

  /**
   * Getter for <code>node.repeatable</code>.
   */
  @Override
  public Boolean getRepeatable() {
    return this.repeatable;
  }

  /**
   * Setter for <code>node.repeatable</code>.
   */
  @Override
  public void setRepeatable(Boolean repeatable) {
    this.repeatable = repeatable;
  }

  /**
   * Getter for <code>node.identifier_field_id</code>. If the node is repeatable, then the identifier_field_id should point to the field of type "id" which is supposed to hold the identifier of whatever entities this repeatable node contains.
   */
  @Override
  public String getIdentifierFieldId() {
    return this.identifierFieldId;
  }

  /**
   * Setter for <code>node.identifier_field_id</code>. If the node is repeatable, then the identifier_field_id should point to the field of type "id" which is supposed to hold the identifier of whatever entities this repeatable node contains.
   */
  @Override
  public void setIdentifierFieldId(String identifierFieldId) {
    this.identifierFieldId = identifierFieldId;
  }

  /**
   * Getter for <code>node.name</code>. Human readable name
   */
  @Override
  public String getName() {
    return this.name;
  }

  /**
   * Setter for <code>node.name</code>. Human readable name
   */
  @Override
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Getter for <code>node.description</code>.
   */
  @Override
  public String getDescription() {
    return this.description;
  }

  /**
   * Setter for <code>node.description</code>.
   */
  @Override
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Getter for <code>node.db_generated</code>.
   */
  @Override
  public Boolean getDbGenerated() {
    return this.dbGenerated;
  }

  /**
   * Setter for <code>node.db_generated</code>.
   */
  @Override
  public void setDbGenerated(Boolean dbGenerated) {
    this.dbGenerated = dbGenerated;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Node (");

    sb.append(id);
    sb.append(", ").append(parentId);
    sb.append(", ").append(xpathRelative);
    sb.append(", ").append(repeatable);
    sb.append(", ").append(identifierFieldId);
    sb.append(", ").append(name);
    sb.append(", ").append(description);
    sb.append(", ").append(dbGenerated);

    sb.append(")");
    return sb.toString();
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(INode from) {
    setId(from.getId());
    setParentId(from.getParentId());
    setXpathRelative(from.getXpathRelative());
    setRepeatable(from.getRepeatable());
    setIdentifierFieldId(from.getIdentifierFieldId());
    setName(from.getName());
    setDescription(from.getDescription());
    setDbGenerated(from.getDbGenerated());
  }

  @Override
  public <E extends INode> E into(E into) {
    into.from(this);
    return into;
  }
}
