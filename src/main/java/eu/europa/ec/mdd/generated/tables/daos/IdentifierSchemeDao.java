/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.tables.IdentifierScheme;
import eu.europa.ec.mdd.generated.tables.records.IdentifierSchemeRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class IdentifierSchemeDao extends DAOImpl<IdentifierSchemeRecord, eu.europa.ec.mdd.generated.tables.pojos.IdentifierScheme, String> {

  /**
   * Create a new IdentifierSchemeDao without any configuration
   */
  public IdentifierSchemeDao() {
    super(IdentifierScheme.IDENTIFIER_SCHEME, eu.europa.ec.mdd.generated.tables.pojos.IdentifierScheme.class);
  }

  /**
   * Create a new IdentifierSchemeDao with an attached configuration
   */
  @Autowired
  public IdentifierSchemeDao(Configuration configuration) {
    super(IdentifierScheme.IDENTIFIER_SCHEME, eu.europa.ec.mdd.generated.tables.pojos.IdentifierScheme.class, configuration);
  }

  @Override
  public String getId(eu.europa.ec.mdd.generated.tables.pojos.IdentifierScheme object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.IdentifierScheme> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
    return fetchRange(IdentifierScheme.IDENTIFIER_SCHEME.ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.IdentifierScheme> fetchById(String... values) {
    return fetch(IdentifierScheme.IDENTIFIER_SCHEME.ID, values);
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.IdentifierScheme fetchOneById(String value) {
    return fetchOne(IdentifierScheme.IDENTIFIER_SCHEME.ID, value);
  }

  /**
   * Fetch records that have <code>scheme_name BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.IdentifierScheme> fetchRangeOfSchemeName(String lowerInclusive, String upperInclusive) {
    return fetchRange(IdentifierScheme.IDENTIFIER_SCHEME.SCHEME_NAME, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>scheme_name IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.IdentifierScheme> fetchBySchemeName(String... values) {
    return fetch(IdentifierScheme.IDENTIFIER_SCHEME.SCHEME_NAME, values);
  }

  /**
   * Fetch records that have <code>id_prefix BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.IdentifierScheme> fetchRangeOfIdPrefix(String lowerInclusive, String upperInclusive) {
    return fetchRange(IdentifierScheme.IDENTIFIER_SCHEME.ID_PREFIX, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>id_prefix IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.IdentifierScheme> fetchByIdPrefix(String... values) {
    return fetch(IdentifierScheme.IDENTIFIER_SCHEME.ID_PREFIX, values);
  }
}
