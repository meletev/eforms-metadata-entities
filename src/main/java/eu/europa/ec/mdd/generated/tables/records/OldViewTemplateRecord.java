/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.records;


import eu.europa.ec.mdd.generated.tables.OldViewTemplate;
import eu.europa.ec.mdd.generated.tables.interfaces.IOldViewTemplate;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OldViewTemplateRecord extends UpdatableRecordImpl<OldViewTemplateRecord> implements Record11<String, String, String, Integer, String, String, LocalDateTime, LocalDateTime, String, String, String>, IOldViewTemplate {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>old_view_template.id</code>. Zero is root (can have a prefix)
   */
  @Override
  public void setId(String value) {
    set(0, value);
  }

  /**
   * Getter for <code>old_view_template.id</code>. Zero is root (can have a prefix)
   */
  @Override
  public String getId() {
    return (String) get(0);
  }

  /**
   * Setter for <code>old_view_template.parent_id</code>.
   */
  @Override
  public void setParentId(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>old_view_template.parent_id</code>.
   */
  @Override
  public String getParentId() {
    return (String) get(1);
  }

  /**
   * Setter for <code>old_view_template.view_id</code>.
   */
  @Override
  public void setViewId(String value) {
    set(2, value);
  }

  /**
   * Getter for <code>old_view_template.view_id</code>.
   */
  @Override
  public String getViewId() {
    return (String) get(2);
  }

  /**
   * Setter for <code>old_view_template.sort_order</code>.
   */
  @Override
  public void setSortOrder(Integer value) {
    set(3, value);
  }

  /**
   * Getter for <code>old_view_template.sort_order</code>.
   */
  @Override
  public Integer getSortOrder() {
    return (Integer) get(3);
  }

  /**
   * Setter for <code>old_view_template.number</code>.
   */
  @Override
  public void setNumber(String value) {
    set(4, value);
  }

  /**
   * Getter for <code>old_view_template.number</code>.
   */
  @Override
  public String getNumber() {
    return (String) get(4);
  }

  /**
   * Setter for <code>old_view_template.template</code>.
   */
  @Override
  public void setTemplate(String value) {
    set(5, value);
  }

  /**
   * Getter for <code>old_view_template.template</code>.
   */
  @Override
  public String getTemplate() {
    return (String) get(5);
  }

  /**
   * Setter for <code>old_view_template.created</code>.
   */
  @Override
  public void setCreated(LocalDateTime value) {
    set(6, value);
  }

  /**
   * Getter for <code>old_view_template.created</code>.
   */
  @Override
  public LocalDateTime getCreated() {
    return (LocalDateTime) get(6);
  }

  /**
   * Setter for <code>old_view_template.imported</code>. Set by import code
   */
  @Override
  public void setImported(LocalDateTime value) {
    set(7, value);
  }

  /**
   * Getter for <code>old_view_template.imported</code>. Set by import code
   */
  @Override
  public LocalDateTime getImported() {
    return (LocalDateTime) get(7);
  }

  /**
   * Setter for <code>old_view_template.repeats_with_node</code>.
   */
  @Override
  public void setRepeatsWithNode(String value) {
    set(8, value);
  }

  /**
   * Getter for <code>old_view_template.repeats_with_node</code>.
   */
  @Override
  public String getRepeatsWithNode() {
    return (String) get(8);
  }

  /**
   * Setter for <code>old_view_template.repeats_with_field</code>.
   */
  @Override
  public void setRepeatsWithField(String value) {
    set(9, value);
  }

  /**
   * Getter for <code>old_view_template.repeats_with_field</code>.
   */
  @Override
  public String getRepeatsWithField() {
    return (String) get(9);
  }

  /**
   * Setter for <code>old_view_template.context</code>.
   */
  @Override
  public void setContext(String value) {
    set(10, value);
  }

  /**
   * Getter for <code>old_view_template.context</code>.
   */
  @Override
  public String getContext() {
    return (String) get(10);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<String> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record11 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row11<String, String, String, Integer, String, String, LocalDateTime, LocalDateTime, String, String, String> fieldsRow() {
    return (Row11) super.fieldsRow();
  }

  @Override
  public Row11<String, String, String, Integer, String, String, LocalDateTime, LocalDateTime, String, String, String> valuesRow() {
    return (Row11) super.valuesRow();
  }

  @Override
  public Field<String> field1() {
    return OldViewTemplate.OLD_VIEW_TEMPLATE.ID;
  }

  @Override
  public Field<String> field2() {
    return OldViewTemplate.OLD_VIEW_TEMPLATE.PARENT_ID;
  }

  @Override
  public Field<String> field3() {
    return OldViewTemplate.OLD_VIEW_TEMPLATE.VIEW_ID;
  }

  @Override
  public Field<Integer> field4() {
    return OldViewTemplate.OLD_VIEW_TEMPLATE.SORT_ORDER;
  }

  @Override
  public Field<String> field5() {
    return OldViewTemplate.OLD_VIEW_TEMPLATE.NUMBER;
  }

  @Override
  public Field<String> field6() {
    return OldViewTemplate.OLD_VIEW_TEMPLATE.TEMPLATE;
  }

  @Override
  public Field<LocalDateTime> field7() {
    return OldViewTemplate.OLD_VIEW_TEMPLATE.CREATED;
  }

  @Override
  public Field<LocalDateTime> field8() {
    return OldViewTemplate.OLD_VIEW_TEMPLATE.IMPORTED;
  }

  @Override
  public Field<String> field9() {
    return OldViewTemplate.OLD_VIEW_TEMPLATE.REPEATS_WITH_NODE;
  }

  @Override
  public Field<String> field10() {
    return OldViewTemplate.OLD_VIEW_TEMPLATE.REPEATS_WITH_FIELD;
  }

  @Override
  public Field<String> field11() {
    return OldViewTemplate.OLD_VIEW_TEMPLATE.CONTEXT;
  }

  @Override
  public String component1() {
    return getId();
  }

  @Override
  public String component2() {
    return getParentId();
  }

  @Override
  public String component3() {
    return getViewId();
  }

  @Override
  public Integer component4() {
    return getSortOrder();
  }

  @Override
  public String component5() {
    return getNumber();
  }

  @Override
  public String component6() {
    return getTemplate();
  }

  @Override
  public LocalDateTime component7() {
    return getCreated();
  }

  @Override
  public LocalDateTime component8() {
    return getImported();
  }

  @Override
  public String component9() {
    return getRepeatsWithNode();
  }

  @Override
  public String component10() {
    return getRepeatsWithField();
  }

  @Override
  public String component11() {
    return getContext();
  }

  @Override
  public String value1() {
    return getId();
  }

  @Override
  public String value2() {
    return getParentId();
  }

  @Override
  public String value3() {
    return getViewId();
  }

  @Override
  public Integer value4() {
    return getSortOrder();
  }

  @Override
  public String value5() {
    return getNumber();
  }

  @Override
  public String value6() {
    return getTemplate();
  }

  @Override
  public LocalDateTime value7() {
    return getCreated();
  }

  @Override
  public LocalDateTime value8() {
    return getImported();
  }

  @Override
  public String value9() {
    return getRepeatsWithNode();
  }

  @Override
  public String value10() {
    return getRepeatsWithField();
  }

  @Override
  public String value11() {
    return getContext();
  }

  @Override
  public OldViewTemplateRecord value1(String value) {
    setId(value);
    return this;
  }

  @Override
  public OldViewTemplateRecord value2(String value) {
    setParentId(value);
    return this;
  }

  @Override
  public OldViewTemplateRecord value3(String value) {
    setViewId(value);
    return this;
  }

  @Override
  public OldViewTemplateRecord value4(Integer value) {
    setSortOrder(value);
    return this;
  }

  @Override
  public OldViewTemplateRecord value5(String value) {
    setNumber(value);
    return this;
  }

  @Override
  public OldViewTemplateRecord value6(String value) {
    setTemplate(value);
    return this;
  }

  @Override
  public OldViewTemplateRecord value7(LocalDateTime value) {
    setCreated(value);
    return this;
  }

  @Override
  public OldViewTemplateRecord value8(LocalDateTime value) {
    setImported(value);
    return this;
  }

  @Override
  public OldViewTemplateRecord value9(String value) {
    setRepeatsWithNode(value);
    return this;
  }

  @Override
  public OldViewTemplateRecord value10(String value) {
    setRepeatsWithField(value);
    return this;
  }

  @Override
  public OldViewTemplateRecord value11(String value) {
    setContext(value);
    return this;
  }

  @Override
  public OldViewTemplateRecord values(String value1, String value2, String value3, Integer value4, String value5, String value6, LocalDateTime value7, LocalDateTime value8, String value9, String value10, String value11) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    value7(value7);
    value8(value8);
    value9(value9);
    value10(value10);
    value11(value11);
    return this;
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(IOldViewTemplate from) {
    setId(from.getId());
    setParentId(from.getParentId());
    setViewId(from.getViewId());
    setSortOrder(from.getSortOrder());
    setNumber(from.getNumber());
    setTemplate(from.getTemplate());
    setCreated(from.getCreated());
    setImported(from.getImported());
    setRepeatsWithNode(from.getRepeatsWithNode());
    setRepeatsWithField(from.getRepeatsWithField());
    setContext(from.getContext());
  }

  @Override
  public <E extends IOldViewTemplate> E into(E into) {
    into.from(this);
    return into;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached OldViewTemplateRecord
   */
  public OldViewTemplateRecord() {
    super(OldViewTemplate.OLD_VIEW_TEMPLATE);
  }

  /**
   * Create a detached, initialised OldViewTemplateRecord
   */
  public OldViewTemplateRecord(String id, String parentId, String viewId, Integer sortOrder, String number, String template, LocalDateTime created, LocalDateTime imported, String repeatsWithNode, String repeatsWithField, String context) {
    super(OldViewTemplate.OLD_VIEW_TEMPLATE);

    setId(id);
    setParentId(parentId);
    setViewId(viewId);
    setSortOrder(sortOrder);
    setNumber(number);
    setTemplate(template);
    setCreated(created);
    setImported(imported);
    setRepeatsWithNode(repeatsWithNode);
    setRepeatsWithField(repeatsWithField);
    setContext(context);
  }
}
