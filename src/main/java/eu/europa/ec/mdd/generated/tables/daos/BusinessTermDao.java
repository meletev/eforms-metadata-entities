/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.tables.BusinessTerm;
import eu.europa.ec.mdd.generated.tables.records.BusinessTermRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class BusinessTermDao extends DAOImpl<BusinessTermRecord, eu.europa.ec.mdd.generated.tables.pojos.BusinessTerm, String> {

  /**
   * Create a new BusinessTermDao without any configuration
   */
  public BusinessTermDao() {
    super(BusinessTerm.BUSINESS_TERM, eu.europa.ec.mdd.generated.tables.pojos.BusinessTerm.class);
  }

  /**
   * Create a new BusinessTermDao with an attached configuration
   */
  @Autowired
  public BusinessTermDao(Configuration configuration) {
    super(BusinessTerm.BUSINESS_TERM, eu.europa.ec.mdd.generated.tables.pojos.BusinessTerm.class, configuration);
  }

  @Override
  public String getId(eu.europa.ec.mdd.generated.tables.pojos.BusinessTerm object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.BusinessTerm> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
    return fetchRange(BusinessTerm.BUSINESS_TERM.ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.BusinessTerm> fetchById(String... values) {
    return fetch(BusinessTerm.BUSINESS_TERM.ID, values);
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.BusinessTerm fetchOneById(String value) {
    return fetchOne(BusinessTerm.BUSINESS_TERM.ID, value);
  }

  /**
   * Fetch records that have <code>business_group_id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.BusinessTerm> fetchRangeOfBusinessGroupId(String lowerInclusive, String upperInclusive) {
    return fetchRange(BusinessTerm.BUSINESS_TERM.BUSINESS_GROUP_ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>business_group_id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.BusinessTerm> fetchByBusinessGroupId(String... values) {
    return fetch(BusinessTerm.BUSINESS_TERM.BUSINESS_GROUP_ID, values);
  }

  /**
   * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.BusinessTerm> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
    return fetchRange(BusinessTerm.BUSINESS_TERM.TYPE, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>type IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.BusinessTerm> fetchByType(String... values) {
    return fetch(BusinessTerm.BUSINESS_TERM.TYPE, values);
  }

  /**
   * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.BusinessTerm> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
    return fetchRange(BusinessTerm.BUSINESS_TERM.DESCRIPTION, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>description IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.BusinessTerm> fetchByDescription(String... values) {
    return fetch(BusinessTerm.BUSINESS_TERM.DESCRIPTION, values);
  }
}
