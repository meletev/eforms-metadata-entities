/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.pojos;


import eu.europa.ec.mdd.generated.tables.interfaces.ISpecialPurposeNode;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpecialPurposeNode implements ISpecialPurposeNode {

  private static final long serialVersionUID = 1L;

  private String id;
  private String description;
  private String nodeId;

  public SpecialPurposeNode() {}

  public SpecialPurposeNode(ISpecialPurposeNode value) {
    this.id = value.getId();
    this.description = value.getDescription();
    this.nodeId = value.getNodeId();
  }

  public SpecialPurposeNode(
    String id,
    String description,
    String nodeId
  ) {
    this.id = id;
    this.description = description;
    this.nodeId = nodeId;
  }

  /**
   * Getter for <code>special_purpose_node.id</code>.
   */
  @Override
  public String getId() {
    return this.id;
  }

  /**
   * Setter for <code>special_purpose_node.id</code>.
   */
  @Override
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Getter for <code>special_purpose_node.description</code>.
   */
  @Override
  public String getDescription() {
    return this.description;
  }

  /**
   * Setter for <code>special_purpose_node.description</code>.
   */
  @Override
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Getter for <code>special_purpose_node.node_id</code>.
   */
  @Override
  public String getNodeId() {
    return this.nodeId;
  }

  /**
   * Setter for <code>special_purpose_node.node_id</code>.
   */
  @Override
  public void setNodeId(String nodeId) {
    this.nodeId = nodeId;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SpecialPurposeNode (");

    sb.append(id);
    sb.append(", ").append(description);
    sb.append(", ").append(nodeId);

    sb.append(")");
    return sb.toString();
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(ISpecialPurposeNode from) {
    setId(from.getId());
    setDescription(from.getDescription());
    setNodeId(from.getNodeId());
  }

  @Override
  public <E extends ISpecialPurposeNode> E into(E into) {
    into.from(this);
    return into;
  }
}
