/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.pojos;


import eu.europa.ec.mdd.generated.tables.interfaces.IOldViewTemplate;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OldViewTemplate implements IOldViewTemplate {

  private static final long serialVersionUID = 1L;

  private String        id;
  private String        parentId;
  private String        viewId;
  private Integer       sortOrder;
  private String        number;
  private String        template;
  private LocalDateTime created;
  private LocalDateTime imported;
  private String        repeatsWithNode;
  private String        repeatsWithField;
  private String        context;

  public OldViewTemplate() {}

  public OldViewTemplate(IOldViewTemplate value) {
    this.id = value.getId();
    this.parentId = value.getParentId();
    this.viewId = value.getViewId();
    this.sortOrder = value.getSortOrder();
    this.number = value.getNumber();
    this.template = value.getTemplate();
    this.created = value.getCreated();
    this.imported = value.getImported();
    this.repeatsWithNode = value.getRepeatsWithNode();
    this.repeatsWithField = value.getRepeatsWithField();
    this.context = value.getContext();
  }

  public OldViewTemplate(
    String        id,
    String        parentId,
    String        viewId,
    Integer       sortOrder,
    String        number,
    String        template,
    LocalDateTime created,
    LocalDateTime imported,
    String        repeatsWithNode,
    String        repeatsWithField,
    String        context
  ) {
    this.id = id;
    this.parentId = parentId;
    this.viewId = viewId;
    this.sortOrder = sortOrder;
    this.number = number;
    this.template = template;
    this.created = created;
    this.imported = imported;
    this.repeatsWithNode = repeatsWithNode;
    this.repeatsWithField = repeatsWithField;
    this.context = context;
  }

  /**
   * Getter for <code>old_view_template.id</code>. Zero is root (can have a prefix)
   */
  @Override
  public String getId() {
    return this.id;
  }

  /**
   * Setter for <code>old_view_template.id</code>. Zero is root (can have a prefix)
   */
  @Override
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Getter for <code>old_view_template.parent_id</code>.
   */
  @Override
  public String getParentId() {
    return this.parentId;
  }

  /**
   * Setter for <code>old_view_template.parent_id</code>.
   */
  @Override
  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  /**
   * Getter for <code>old_view_template.view_id</code>.
   */
  @Override
  public String getViewId() {
    return this.viewId;
  }

  /**
   * Setter for <code>old_view_template.view_id</code>.
   */
  @Override
  public void setViewId(String viewId) {
    this.viewId = viewId;
  }

  /**
   * Getter for <code>old_view_template.sort_order</code>.
   */
  @Override
  public Integer getSortOrder() {
    return this.sortOrder;
  }

  /**
   * Setter for <code>old_view_template.sort_order</code>.
   */
  @Override
  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }

  /**
   * Getter for <code>old_view_template.number</code>.
   */
  @Override
  public String getNumber() {
    return this.number;
  }

  /**
   * Setter for <code>old_view_template.number</code>.
   */
  @Override
  public void setNumber(String number) {
    this.number = number;
  }

  /**
   * Getter for <code>old_view_template.template</code>.
   */
  @Override
  public String getTemplate() {
    return this.template;
  }

  /**
   * Setter for <code>old_view_template.template</code>.
   */
  @Override
  public void setTemplate(String template) {
    this.template = template;
  }

  /**
   * Getter for <code>old_view_template.created</code>.
   */
  @Override
  public LocalDateTime getCreated() {
    return this.created;
  }

  /**
   * Setter for <code>old_view_template.created</code>.
   */
  @Override
  public void setCreated(LocalDateTime created) {
    this.created = created;
  }

  /**
   * Getter for <code>old_view_template.imported</code>. Set by import code
   */
  @Override
  public LocalDateTime getImported() {
    return this.imported;
  }

  /**
   * Setter for <code>old_view_template.imported</code>. Set by import code
   */
  @Override
  public void setImported(LocalDateTime imported) {
    this.imported = imported;
  }

  /**
   * Getter for <code>old_view_template.repeats_with_node</code>.
   */
  @Override
  public String getRepeatsWithNode() {
    return this.repeatsWithNode;
  }

  /**
   * Setter for <code>old_view_template.repeats_with_node</code>.
   */
  @Override
  public void setRepeatsWithNode(String repeatsWithNode) {
    this.repeatsWithNode = repeatsWithNode;
  }

  /**
   * Getter for <code>old_view_template.repeats_with_field</code>.
   */
  @Override
  public String getRepeatsWithField() {
    return this.repeatsWithField;
  }

  /**
   * Setter for <code>old_view_template.repeats_with_field</code>.
   */
  @Override
  public void setRepeatsWithField(String repeatsWithField) {
    this.repeatsWithField = repeatsWithField;
  }

  /**
   * Getter for <code>old_view_template.context</code>.
   */
  @Override
  public String getContext() {
    return this.context;
  }

  /**
   * Setter for <code>old_view_template.context</code>.
   */
  @Override
  public void setContext(String context) {
    this.context = context;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OldViewTemplate (");

    sb.append(id);
    sb.append(", ").append(parentId);
    sb.append(", ").append(viewId);
    sb.append(", ").append(sortOrder);
    sb.append(", ").append(number);
    sb.append(", ").append(template);
    sb.append(", ").append(created);
    sb.append(", ").append(imported);
    sb.append(", ").append(repeatsWithNode);
    sb.append(", ").append(repeatsWithField);
    sb.append(", ").append(context);

    sb.append(")");
    return sb.toString();
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(IOldViewTemplate from) {
    setId(from.getId());
    setParentId(from.getParentId());
    setViewId(from.getViewId());
    setSortOrder(from.getSortOrder());
    setNumber(from.getNumber());
    setTemplate(from.getTemplate());
    setCreated(from.getCreated());
    setImported(from.getImported());
    setRepeatsWithNode(from.getRepeatsWithNode());
    setRepeatsWithField(from.getRepeatsWithField());
    setContext(from.getContext());
  }

  @Override
  public <E extends IOldViewTemplate> E into(E into) {
    into.from(this);
    return into;
  }
}
