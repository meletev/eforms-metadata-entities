/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.records;


import eu.europa.ec.mdd.generated.enums.NoticeFormType;
import eu.europa.ec.mdd.generated.enums.NoticeLegalBasis;
import eu.europa.ec.mdd.generated.enums.NoticeNoticeType;
import eu.europa.ec.mdd.generated.tables.Notice;
import eu.europa.ec.mdd.generated.tables.interfaces.INotice;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NoticeRecord extends UpdatableRecordImpl<NoticeRecord> implements Record6<String, NoticeLegalBasis, NoticeFormType, NoticeNoticeType, String, String>, INotice {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>notice.id</code>.
   */
  @Override
  public void setId(String value) {
    set(0, value);
  }

  /**
   * Getter for <code>notice.id</code>.
   */
  @Override
  public String getId() {
    return (String) get(0);
  }

  /**
   * Setter for <code>notice.legal_basis</code>.
   */
  @Override
  public void setLegalBasis(NoticeLegalBasis value) {
    set(1, value);
  }

  /**
   * Getter for <code>notice.legal_basis</code>.
   */
  @Override
  public NoticeLegalBasis getLegalBasis() {
    return (NoticeLegalBasis) get(1);
  }

  /**
   * Setter for <code>notice.form_type</code>.
   */
  @Override
  public void setFormType(NoticeFormType value) {
    set(2, value);
  }

  /**
   * Getter for <code>notice.form_type</code>.
   */
  @Override
  public NoticeFormType getFormType() {
    return (NoticeFormType) get(2);
  }

  /**
   * Setter for <code>notice.notice_type</code>.
   */
  @Override
  public void setNoticeType(NoticeNoticeType value) {
    set(3, value);
  }

  /**
   * Getter for <code>notice.notice_type</code>.
   */
  @Override
  public NoticeNoticeType getNoticeType() {
    return (NoticeNoticeType) get(3);
  }

  /**
   * Setter for <code>notice.document_type_id</code>.
   */
  @Override
  public void setDocumentTypeId(String value) {
    set(4, value);
  }

  /**
   * Getter for <code>notice.document_type_id</code>.
   */
  @Override
  public String getDocumentTypeId() {
    return (String) get(4);
  }

  /**
   * Setter for <code>notice.description</code>.
   */
  @Override
  public void setDescription(String value) {
    set(5, value);
  }

  /**
   * Getter for <code>notice.description</code>.
   */
  @Override
  public String getDescription() {
    return (String) get(5);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<String> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record6 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row6<String, NoticeLegalBasis, NoticeFormType, NoticeNoticeType, String, String> fieldsRow() {
    return (Row6) super.fieldsRow();
  }

  @Override
  public Row6<String, NoticeLegalBasis, NoticeFormType, NoticeNoticeType, String, String> valuesRow() {
    return (Row6) super.valuesRow();
  }

  @Override
  public Field<String> field1() {
    return Notice.NOTICE.ID;
  }

  @Override
  public Field<NoticeLegalBasis> field2() {
    return Notice.NOTICE.LEGAL_BASIS;
  }

  @Override
  public Field<NoticeFormType> field3() {
    return Notice.NOTICE.FORM_TYPE;
  }

  @Override
  public Field<NoticeNoticeType> field4() {
    return Notice.NOTICE.NOTICE_TYPE;
  }

  @Override
  public Field<String> field5() {
    return Notice.NOTICE.DOCUMENT_TYPE_ID;
  }

  @Override
  public Field<String> field6() {
    return Notice.NOTICE.DESCRIPTION;
  }

  @Override
  public String component1() {
    return getId();
  }

  @Override
  public NoticeLegalBasis component2() {
    return getLegalBasis();
  }

  @Override
  public NoticeFormType component3() {
    return getFormType();
  }

  @Override
  public NoticeNoticeType component4() {
    return getNoticeType();
  }

  @Override
  public String component5() {
    return getDocumentTypeId();
  }

  @Override
  public String component6() {
    return getDescription();
  }

  @Override
  public String value1() {
    return getId();
  }

  @Override
  public NoticeLegalBasis value2() {
    return getLegalBasis();
  }

  @Override
  public NoticeFormType value3() {
    return getFormType();
  }

  @Override
  public NoticeNoticeType value4() {
    return getNoticeType();
  }

  @Override
  public String value5() {
    return getDocumentTypeId();
  }

  @Override
  public String value6() {
    return getDescription();
  }

  @Override
  public NoticeRecord value1(String value) {
    setId(value);
    return this;
  }

  @Override
  public NoticeRecord value2(NoticeLegalBasis value) {
    setLegalBasis(value);
    return this;
  }

  @Override
  public NoticeRecord value3(NoticeFormType value) {
    setFormType(value);
    return this;
  }

  @Override
  public NoticeRecord value4(NoticeNoticeType value) {
    setNoticeType(value);
    return this;
  }

  @Override
  public NoticeRecord value5(String value) {
    setDocumentTypeId(value);
    return this;
  }

  @Override
  public NoticeRecord value6(String value) {
    setDescription(value);
    return this;
  }

  @Override
  public NoticeRecord values(String value1, NoticeLegalBasis value2, NoticeFormType value3, NoticeNoticeType value4, String value5, String value6) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    return this;
  }

  // -------------------------------------------------------------------------
  // FROM and INTO
  // -------------------------------------------------------------------------

  @Override
  public void from(INotice from) {
    setId(from.getId());
    setLegalBasis(from.getLegalBasis());
    setFormType(from.getFormType());
    setNoticeType(from.getNoticeType());
    setDocumentTypeId(from.getDocumentTypeId());
    setDescription(from.getDescription());
  }

  @Override
  public <E extends INotice> E into(E into) {
    into.from(this);
    return into;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached NoticeRecord
   */
  public NoticeRecord() {
    super(Notice.NOTICE);
  }

  /**
   * Create a detached, initialised NoticeRecord
   */
  public NoticeRecord(String id, NoticeLegalBasis legalBasis, NoticeFormType formType, NoticeNoticeType noticeType, String documentTypeId, String description) {
    super(Notice.NOTICE);

    setId(id);
    setLegalBasis(legalBasis);
    setFormType(formType);
    setNoticeType(noticeType);
    setDocumentTypeId(documentTypeId);
    setDescription(description);
  }
}
