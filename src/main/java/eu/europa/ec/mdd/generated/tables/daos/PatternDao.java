/*
 * This file is generated by jOOQ.
 */
package eu.europa.ec.mdd.generated.tables.daos;


import eu.europa.ec.mdd.generated.tables.Pattern;
import eu.europa.ec.mdd.generated.tables.records.PatternRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class PatternDao extends DAOImpl<PatternRecord, eu.europa.ec.mdd.generated.tables.pojos.Pattern, String> {

  /**
   * Create a new PatternDao without any configuration
   */
  public PatternDao() {
    super(Pattern.PATTERN, eu.europa.ec.mdd.generated.tables.pojos.Pattern.class);
  }

  /**
   * Create a new PatternDao with an attached configuration
   */
  @Autowired
  public PatternDao(Configuration configuration) {
    super(Pattern.PATTERN, eu.europa.ec.mdd.generated.tables.pojos.Pattern.class, configuration);
  }

  @Override
  public String getId(eu.europa.ec.mdd.generated.tables.pojos.Pattern object) {
    return object.getId();
  }

  /**
   * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Pattern> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
    return fetchRange(Pattern.PATTERN.ID, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Pattern> fetchById(String... values) {
    return fetch(Pattern.PATTERN.ID, values);
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  public eu.europa.ec.mdd.generated.tables.pojos.Pattern fetchOneById(String value) {
    return fetchOne(Pattern.PATTERN.ID, value);
  }

  /**
   * Fetch records that have <code>value BETWEEN lowerInclusive AND upperInclusive</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Pattern> fetchRangeOfValue(String lowerInclusive, String upperInclusive) {
    return fetchRange(Pattern.PATTERN.VALUE, lowerInclusive, upperInclusive);
  }

  /**
   * Fetch records that have <code>value IN (values)</code>
   */
  public List<eu.europa.ec.mdd.generated.tables.pojos.Pattern> fetchByValue(String... values) {
    return fetch(Pattern.PATTERN.VALUE, values);
  }
}
